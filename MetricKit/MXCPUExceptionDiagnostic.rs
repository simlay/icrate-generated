//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::MetricKit::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MetricKit_MXCPUExceptionDiagnostic")]
    /**
     @class         MXCPUExceptionDiagnostic
    @abstract      An MXDiagnostic subclass that encapsulates CPU exception diagnostic reports.
    @discussion    CPU exceptions occur when your application consumes excessive CPU time in a short period of time.
    @discussion    CPU exceptions can be both fatal and non-fatal to your application.
    */
    pub struct MXCPUExceptionDiagnostic;

    #[cfg(feature = "MetricKit_MXCPUExceptionDiagnostic")]
    unsafe impl ClassType for MXCPUExceptionDiagnostic {
        #[inherits(NSObject)]
        type Super = MXDiagnostic;
    }
);

#[cfg(feature = "MetricKit_MXCPUExceptionDiagnostic")]
/**
 @class         MXCPUExceptionDiagnostic
@abstract      An MXDiagnostic subclass that encapsulates CPU exception diagnostic reports.
@discussion    CPU exceptions occur when your application consumes excessive CPU time in a short period of time.
@discussion    CPU exceptions can be both fatal and non-fatal to your application.
*/
unsafe impl NSCoding for MXCPUExceptionDiagnostic {}

#[cfg(feature = "MetricKit_MXCPUExceptionDiagnostic")]
/**
 @class         MXCPUExceptionDiagnostic
@abstract      An MXDiagnostic subclass that encapsulates CPU exception diagnostic reports.
@discussion    CPU exceptions occur when your application consumes excessive CPU time in a short period of time.
@discussion    CPU exceptions can be both fatal and non-fatal to your application.
*/
unsafe impl NSObjectProtocol for MXCPUExceptionDiagnostic {}

#[cfg(feature = "MetricKit_MXCPUExceptionDiagnostic")]
/**
 @class         MXCPUExceptionDiagnostic
@abstract      An MXDiagnostic subclass that encapsulates CPU exception diagnostic reports.
@discussion    CPU exceptions occur when your application consumes excessive CPU time in a short period of time.
@discussion    CPU exceptions can be both fatal and non-fatal to your application.
*/
unsafe impl NSSecureCoding for MXCPUExceptionDiagnostic {}

extern_methods!(
    /**
     @class         MXCPUExceptionDiagnostic
    @abstract      An MXDiagnostic subclass that encapsulates CPU exception diagnostic reports.
    @discussion    CPU exceptions occur when your application consumes excessive CPU time in a short period of time.
    @discussion    CPU exceptions can be both fatal and non-fatal to your application.
    */
    #[cfg(feature = "MetricKit_MXCPUExceptionDiagnostic")]
    unsafe impl MXCPUExceptionDiagnostic {
        #[cfg(feature = "MetricKit_MXCallStackTree")]
        /**
         @property      callStackTree
        @abstract      The application call stack tree associated with the excessive CPU consumption.
        */
        #[method_id(@__retain_semantics Other callStackTree)]
        pub unsafe fn callStackTree(&self) -> Id<MXCallStackTree>;

        #[cfg(all(
            feature = "Foundation_NSMeasurement",
            feature = "Foundation_NSUnitDuration"
        ))]
        /**
         @property      totalCPUTime
        @abstract      Total CPU time consumed in the scope of this CPU exception.
        @discussion    Dimensioned as NSUnitDuration.
        */
        #[method_id(@__retain_semantics Other totalCPUTime)]
        pub unsafe fn totalCPUTime(&self) -> Id<NSMeasurement<NSUnitDuration>>;

        #[cfg(all(
            feature = "Foundation_NSMeasurement",
            feature = "Foundation_NSUnitDuration"
        ))]
        /**
         @property      totalSampledTime
        @abstract      Total time that the application was sampled for during the CPU exception.
        @discussion    Dimensioned as NSUnitDuration.
        */
        #[method_id(@__retain_semantics Other totalSampledTime)]
        pub unsafe fn totalSampledTime(&self) -> Id<NSMeasurement<NSUnitDuration>>;
    }
);
