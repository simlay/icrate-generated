//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::MetricKit::*;

__inner_extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MetricKit_MXHistogramBucket")]
    pub struct MXHistogramBucket<UnitType: Message = Object, UnitTypeOwnership: Ownership = Shared> {
        _inner0: PhantomData<*mut (UnitType, UnitTypeOwnership)>,
        notunwindsafe: PhantomData<&'static mut ()>,
    }

    #[cfg(feature = "MetricKit_MXHistogramBucket")]
    unsafe impl<UnitType: Message, UnitTypeOwnership: Ownership> ClassType
        for MXHistogramBucket<UnitType, UnitTypeOwnership>
    {
        type Super = NSObject;
    }
);

#[cfg(feature = "MetricKit_MXHistogramBucket")]
unsafe impl<UnitType: Message, UnitTypeOwnership: Ownership> NSCoding
    for MXHistogramBucket<UnitType, UnitTypeOwnership>
{
}

#[cfg(feature = "MetricKit_MXHistogramBucket")]
unsafe impl<UnitType: Message, UnitTypeOwnership: Ownership> NSObjectProtocol
    for MXHistogramBucket<UnitType, UnitTypeOwnership>
{
}

#[cfg(feature = "MetricKit_MXHistogramBucket")]
unsafe impl<UnitType: Message, UnitTypeOwnership: Ownership> NSSecureCoding
    for MXHistogramBucket<UnitType, UnitTypeOwnership>
{
}

extern_methods!(
    #[cfg(feature = "MetricKit_MXHistogramBucket")]
    unsafe impl<UnitType: Message, UnitTypeOwnership: Ownership>
        MXHistogramBucket<UnitType, UnitTypeOwnership>
    {
        #[cfg(feature = "Foundation_NSMeasurement")]
        #[method_id(@__retain_semantics Other bucketStart)]
        pub unsafe fn bucketStart(&self) -> Id<NSMeasurement<UnitType>>;

        #[cfg(feature = "Foundation_NSMeasurement")]
        #[method_id(@__retain_semantics Other bucketEnd)]
        pub unsafe fn bucketEnd(&self) -> Id<NSMeasurement<UnitType>>;

        #[method(bucketCount)]
        pub unsafe fn bucketCount(&self) -> NSUInteger;
    }
);

__inner_extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MetricKit_MXHistogram")]
    pub struct MXHistogram<UnitType: Message = Object, UnitTypeOwnership: Ownership = Shared> {
        _inner0: PhantomData<*mut (UnitType, UnitTypeOwnership)>,
        notunwindsafe: PhantomData<&'static mut ()>,
    }

    #[cfg(feature = "MetricKit_MXHistogram")]
    unsafe impl<UnitType: Message, UnitTypeOwnership: Ownership> ClassType
        for MXHistogram<UnitType, UnitTypeOwnership>
    {
        type Super = NSObject;
    }
);

#[cfg(feature = "MetricKit_MXHistogram")]
unsafe impl<UnitType: Message, UnitTypeOwnership: Ownership> NSCoding
    for MXHistogram<UnitType, UnitTypeOwnership>
{
}

#[cfg(feature = "MetricKit_MXHistogram")]
unsafe impl<UnitType: Message, UnitTypeOwnership: Ownership> NSObjectProtocol
    for MXHistogram<UnitType, UnitTypeOwnership>
{
}

#[cfg(feature = "MetricKit_MXHistogram")]
unsafe impl<UnitType: Message, UnitTypeOwnership: Ownership> NSSecureCoding
    for MXHistogram<UnitType, UnitTypeOwnership>
{
}

extern_methods!(
    #[cfg(feature = "MetricKit_MXHistogram")]
    unsafe impl<UnitType: Message, UnitTypeOwnership: Ownership>
        MXHistogram<UnitType, UnitTypeOwnership>
    {
        #[method(totalBucketCount)]
        pub unsafe fn totalBucketCount(&self) -> NSUInteger;

        #[cfg(all(
            feature = "Foundation_NSEnumerator",
            feature = "MetricKit_MXHistogramBucket"
        ))]
        #[method_id(@__retain_semantics Other bucketEnumerator)]
        pub unsafe fn bucketEnumerator(&self) -> Id<NSEnumerator<MXHistogramBucket<UnitType>>>;
    }
);
