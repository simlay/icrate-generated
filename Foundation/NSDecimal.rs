//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

ns_enum!(
    #[underlying(NSUInteger)]
    /**
      Rounding policies :
     Original
        value 1.2  1.21  1.25  1.35  1.27
     Plain    1.2  1.2   1.3   1.4   1.3
     Down     1.2  1.2   1.2   1.3   1.2
     Up       1.2  1.3   1.3   1.4   1.3
     Bankers  1.2  1.2   1.2   1.4   1.3
    */
    pub enum NSRoundingMode {
        NSRoundPlain = 0,
        NSRoundDown = 1,
        NSRoundUp = 2,
        NSRoundBankers = 3,
    }
);

ns_enum!(
    #[underlying(NSUInteger)]
    pub enum NSCalculationError {
        NSCalculationNoError = 0,
        NSCalculationLossOfPrecision = 1,
        NSCalculationUnderflow = 2,
        NSCalculationOverflow = 3,
        NSCalculationDivideByZero = 4,
    }
);

inline_fn!(
    pub unsafe fn NSDecimalIsNotANumber(dcm: NonNull<NSDecimal>) -> Bool {
        todo!()
    }
);

extern_fn!(
    pub unsafe fn NSDecimalCopy(destination: NonNull<NSDecimal>, source: NonNull<NSDecimal>);
);

extern_fn!(
    pub unsafe fn NSDecimalCompact(number: NonNull<NSDecimal>);
);

extern_fn!(
    pub unsafe fn NSDecimalCompare(
        left_operand: NonNull<NSDecimal>,
        right_operand: NonNull<NSDecimal>,
    ) -> NSComparisonResult;
);

extern_fn!(
    pub unsafe fn NSDecimalRound(
        result: NonNull<NSDecimal>,
        number: NonNull<NSDecimal>,
        scale: NSInteger,
        rounding_mode: NSRoundingMode,
    );
);

extern_fn!(
    pub unsafe fn NSDecimalNormalize(
        number1: NonNull<NSDecimal>,
        number2: NonNull<NSDecimal>,
        rounding_mode: NSRoundingMode,
    ) -> NSCalculationError;
);

extern_fn!(
    pub unsafe fn NSDecimalAdd(
        result: NonNull<NSDecimal>,
        left_operand: NonNull<NSDecimal>,
        right_operand: NonNull<NSDecimal>,
        rounding_mode: NSRoundingMode,
    ) -> NSCalculationError;
);

extern_fn!(
    pub unsafe fn NSDecimalSubtract(
        result: NonNull<NSDecimal>,
        left_operand: NonNull<NSDecimal>,
        right_operand: NonNull<NSDecimal>,
        rounding_mode: NSRoundingMode,
    ) -> NSCalculationError;
);

extern_fn!(
    pub unsafe fn NSDecimalMultiply(
        result: NonNull<NSDecimal>,
        left_operand: NonNull<NSDecimal>,
        right_operand: NonNull<NSDecimal>,
        rounding_mode: NSRoundingMode,
    ) -> NSCalculationError;
);

extern_fn!(
    pub unsafe fn NSDecimalDivide(
        result: NonNull<NSDecimal>,
        left_operand: NonNull<NSDecimal>,
        right_operand: NonNull<NSDecimal>,
        rounding_mode: NSRoundingMode,
    ) -> NSCalculationError;
);

extern_fn!(
    pub unsafe fn NSDecimalPower(
        result: NonNull<NSDecimal>,
        number: NonNull<NSDecimal>,
        power: NSUInteger,
        rounding_mode: NSRoundingMode,
    ) -> NSCalculationError;
);

extern_fn!(
    pub unsafe fn NSDecimalMultiplyByPowerOf10(
        result: NonNull<NSDecimal>,
        number: NonNull<NSDecimal>,
        power: c_short,
        rounding_mode: NSRoundingMode,
    ) -> NSCalculationError;
);

extern_fn!(
    #[cfg(feature = "Foundation_NSString")]
    pub unsafe fn NSDecimalString(
        dcm: NonNull<NSDecimal>,
        locale: Option<&Object>,
    ) -> NonNull<NSString>;
);
