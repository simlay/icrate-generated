//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::Metal::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "Metal_MTLVisibleFunctionTableDescriptor")]
    pub struct MTLVisibleFunctionTableDescriptor;

    #[cfg(feature = "Metal_MTLVisibleFunctionTableDescriptor")]
    unsafe impl ClassType for MTLVisibleFunctionTableDescriptor {
        type Super = NSObject;
    }
);

#[cfg(feature = "Metal_MTLVisibleFunctionTableDescriptor")]
unsafe impl NSObjectProtocol for MTLVisibleFunctionTableDescriptor {}

extern_methods!(
    #[cfg(feature = "Metal_MTLVisibleFunctionTableDescriptor")]
    unsafe impl MTLVisibleFunctionTableDescriptor {
        #[method_id(@__retain_semantics Other visibleFunctionTableDescriptor)]
        pub unsafe fn visibleFunctionTableDescriptor() -> Id<MTLVisibleFunctionTableDescriptor>;

        /**
          @property functionCount
         @abstract The number of functions in the table.
        */
        #[method(functionCount)]
        pub unsafe fn functionCount(&self) -> NSUInteger;

        /**
          @property functionCount
         @abstract The number of functions in the table.
        */
        #[method(setFunctionCount:)]
        pub unsafe fn setFunctionCount(&self, function_count: NSUInteger);
    }
);

extern_protocol!(
    pub unsafe trait MTLVisibleFunctionTable: MTLResource {
        /**
         @property gpuResourceID
        @abstract Handle of the GPU resource suitable for storing in an Argument Buffer
        */
        #[method(gpuResourceID)]
        unsafe fn gpuResourceID(&self) -> MTLResourceID;

        #[method(setFunction:atIndex:)]
        unsafe fn setFunction_atIndex(
            &self,
            function: Option<&ProtocolObject<dyn MTLFunctionHandle>>,
            index: NSUInteger,
        );

        #[method(setFunctions:withRange:)]
        unsafe fn setFunctions_withRange(
            &self,
            functions: NonNull<*const ProtocolObject<dyn MTLFunctionHandle>>,
            range: NSRange,
        );
    }

    unsafe impl ProtocolType for dyn MTLVisibleFunctionTable {}
);
