//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::Metal::*;

pub type MTLDrawablePresentedHandler = *mut Block<(NonNull<ProtocolObject<dyn MTLDrawable>>,), ()>;

extern_protocol!(
    /**
     @protocol MTLDrawable
    @abstract All "drawable" objects (such as those coming from CAMetalLayer) are expected to conform to this protocol
    */
    pub unsafe trait MTLDrawable: NSObjectProtocol {
        #[method(present)]
        fn present(&self);

        #[method(presentAtTime:)]
        unsafe fn presentAtTime(&self, presentation_time: CFTimeInterval);

        #[method(presentAfterMinimumDuration:)]
        unsafe fn presentAfterMinimumDuration(&self, duration: CFTimeInterval);

        #[method(addPresentedHandler:)]
        unsafe fn addPresentedHandler(&self, block: MTLDrawablePresentedHandler);

        /**
         @property presentedTime
        @abstract The host time that this drawable was presented on screen.
        @discussion Returns 0 if a frame has not been presented or has been skipped.
        */
        #[method(presentedTime)]
        unsafe fn presentedTime(&self) -> CFTimeInterval;

        /**
         @property drawableID
        @abstract The monotonically incremented ID for all MTLDrawable objects created from the same CAMetalLayer object.
        @discussion The value starts from 0.
        */
        #[method(drawableID)]
        fn drawableID(&self) -> NSUInteger;
    }

    unsafe impl ProtocolType for dyn MTLDrawable {}
);
