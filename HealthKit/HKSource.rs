//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HealthKit_HKSource")]
    /**
     @class     HKSource
    @abstract  Represents the entity that created an object stored by HealthKit.
    */
    pub struct HKSource;

    #[cfg(feature = "HealthKit_HKSource")]
    unsafe impl ClassType for HKSource {
        type Super = NSObject;
    }
);

#[cfg(feature = "HealthKit_HKSource")]
/**
 @class     HKSource
@abstract  Represents the entity that created an object stored by HealthKit.
*/
unsafe impl NSCoding for HKSource {}

#[cfg(feature = "HealthKit_HKSource")]
/**
 @class     HKSource
@abstract  Represents the entity that created an object stored by HealthKit.
*/
unsafe impl NSObjectProtocol for HKSource {}

#[cfg(feature = "HealthKit_HKSource")]
/**
 @class     HKSource
@abstract  Represents the entity that created an object stored by HealthKit.
*/
unsafe impl NSSecureCoding for HKSource {}

extern_methods!(
    /**
     @class     HKSource
    @abstract  Represents the entity that created an object stored by HealthKit.
    */
    #[cfg(feature = "HealthKit_HKSource")]
    unsafe impl HKSource {
        #[cfg(feature = "Foundation_NSString")]
        /**
         @property      name
        @abstract      The name of the source represented by the receiver.  If the source is an app, then the name is the
        localized name of the app.
        */
        #[method_id(@__retain_semantics Other name)]
        pub unsafe fn name(&self) -> Id<NSString>;

        #[cfg(feature = "Foundation_NSString")]
        /**
         @property  bundleIdentifier
        @abstract  The bundle identifier of the source represented by the receiver.
        */
        #[method_id(@__retain_semantics Other bundleIdentifier)]
        pub unsafe fn bundleIdentifier(&self) -> Id<NSString>;

        #[method_id(@__retain_semantics Other defaultSource)]
        pub unsafe fn defaultSource() -> Id<HKSource>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
    }
);
