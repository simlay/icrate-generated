//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HealthKit_HKFHIRVersion")]
    /**
     @class         HKFHIRVersion
    @abstract      Represents a FHIR version.
    @discussion    FHIR uses semantic versions ("1.0.2", "4.0.1") to communicate which FHIR version a server supports or a
    given resource is represented in. A FHIR version is associated with one FHIR release.
    @see           http://hl7.org/fhir/versions.html#versions
    */
    pub struct HKFHIRVersion;

    #[cfg(feature = "HealthKit_HKFHIRVersion")]
    unsafe impl ClassType for HKFHIRVersion {
        type Super = NSObject;
    }
);

#[cfg(feature = "HealthKit_HKFHIRVersion")]
/**
 @class         HKFHIRVersion
@abstract      Represents a FHIR version.
@discussion    FHIR uses semantic versions ("1.0.2", "4.0.1") to communicate which FHIR version a server supports or a
given resource is represented in. A FHIR version is associated with one FHIR release.
@see           http://hl7.org/fhir/versions.html#versions
*/
unsafe impl NSCoding for HKFHIRVersion {}

#[cfg(feature = "HealthKit_HKFHIRVersion")]
/**
 @class         HKFHIRVersion
@abstract      Represents a FHIR version.
@discussion    FHIR uses semantic versions ("1.0.2", "4.0.1") to communicate which FHIR version a server supports or a
given resource is represented in. A FHIR version is associated with one FHIR release.
@see           http://hl7.org/fhir/versions.html#versions
*/
unsafe impl NSObjectProtocol for HKFHIRVersion {}

#[cfg(feature = "HealthKit_HKFHIRVersion")]
/**
 @class         HKFHIRVersion
@abstract      Represents a FHIR version.
@discussion    FHIR uses semantic versions ("1.0.2", "4.0.1") to communicate which FHIR version a server supports or a
given resource is represented in. A FHIR version is associated with one FHIR release.
@see           http://hl7.org/fhir/versions.html#versions
*/
unsafe impl NSSecureCoding for HKFHIRVersion {}

extern_methods!(
    /**
     @class         HKFHIRVersion
    @abstract      Represents a FHIR version.
    @discussion    FHIR uses semantic versions ("1.0.2", "4.0.1") to communicate which FHIR version a server supports or a
    given resource is represented in. A FHIR version is associated with one FHIR release.
    @see           http://hl7.org/fhir/versions.html#versions
    */
    #[cfg(feature = "HealthKit_HKFHIRVersion")]
    unsafe impl HKFHIRVersion {
        #[method(majorVersion)]
        pub unsafe fn majorVersion(&self) -> NSInteger;

        #[method(minorVersion)]
        pub unsafe fn minorVersion(&self) -> NSInteger;

        #[method(patchVersion)]
        pub unsafe fn patchVersion(&self) -> NSInteger;

        #[method_id(@__retain_semantics Other FHIRRelease)]
        pub unsafe fn FHIRRelease(&self) -> Id<HKFHIRRelease>;

        #[cfg(feature = "Foundation_NSString")]
        /**
         @property      stringRepresentation
        @abstract      A string representation in the format "{major}.{minor}.{patch}".
        */
        #[method_id(@__retain_semantics Other stringRepresentation)]
        pub unsafe fn stringRepresentation(&self) -> Id<NSString>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(all(feature = "Foundation_NSError", feature = "Foundation_NSString"))]
        #[method_id(@__retain_semantics Other versionFromVersionString:error:_)]
        pub unsafe fn versionFromVersionString_error(
            version_string: &NSString,
        ) -> Result<Id<Self>, Id<NSError>>;

        #[method_id(@__retain_semantics Other primaryDSTU2Version)]
        pub unsafe fn primaryDSTU2Version() -> Id<Self>;

        #[method_id(@__retain_semantics Other primaryR4Version)]
        pub unsafe fn primaryR4Version() -> Id<Self>;
    }
);
