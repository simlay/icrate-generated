//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[cfg(not(any(target_os = "ios")))]
ns_enum!(
    #[underlying(NSInteger)]
    pub enum HKWorkoutSessionState {
        #[cfg(not(any(target_os = "ios")))]
        HKWorkoutSessionStateNotStarted = 1,
        #[cfg(not(any(target_os = "ios")))]
        HKWorkoutSessionStateRunning = 2,
        #[cfg(not(any(target_os = "ios")))]
        HKWorkoutSessionStateEnded = 3,
        HKWorkoutSessionStatePaused = 4,
        HKWorkoutSessionStatePrepared = 5,
        HKWorkoutSessionStateStopped = 6,
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HealthKit_HKWorkoutSession")]
    #[cfg(not(any(target_os = "ios")))]
    pub struct HKWorkoutSession;

    #[cfg(not(any(target_os = "ios")))]
    #[cfg(feature = "HealthKit_HKWorkoutSession")]
    unsafe impl ClassType for HKWorkoutSession {
        type Super = NSObject;
    }
);

#[cfg(feature = "HealthKit_HKWorkoutSession")]
#[cfg(not(any(target_os = "ios")))]
unsafe impl NSCoding for HKWorkoutSession {}

#[cfg(feature = "HealthKit_HKWorkoutSession")]
#[cfg(not(any(target_os = "ios")))]
unsafe impl NSObjectProtocol for HKWorkoutSession {}

#[cfg(feature = "HealthKit_HKWorkoutSession")]
#[cfg(not(any(target_os = "ios")))]
unsafe impl NSSecureCoding for HKWorkoutSession {}

extern_methods!(
    #[cfg(feature = "HealthKit_HKWorkoutSession")]
    #[cfg(not(any(target_os = "ios")))]
    unsafe impl HKWorkoutSession {
        #[cfg(not(any(target_os = "ios")))]
        #[deprecated]
        #[method(activityType)]
        pub unsafe fn activityType(&self) -> HKWorkoutActivityType;

        #[cfg(not(any(target_os = "ios")))]
        #[deprecated]
        #[method(locationType)]
        pub unsafe fn locationType(&self) -> HKWorkoutSessionLocationType;

        #[cfg(not(any(target_os = "ios")))]
        #[cfg(feature = "HealthKit_HKWorkoutConfiguration")]
        #[method_id(@__retain_semantics Other workoutConfiguration)]
        pub unsafe fn workoutConfiguration(&self) -> Id<HKWorkoutConfiguration>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other delegate)]
        pub unsafe fn delegate(&self) -> Option<Id<ProtocolObject<dyn HKWorkoutSessionDelegate>>>;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setDelegate:)]
        pub unsafe fn setDelegate(
            &self,
            delegate: Option<&ProtocolObject<dyn HKWorkoutSessionDelegate>>,
        );

        #[cfg(not(any(target_os = "ios")))]
        #[method(state)]
        pub unsafe fn state(&self) -> HKWorkoutSessionState;

        #[cfg(not(any(target_os = "ios")))]
        #[cfg(feature = "Foundation_NSDate")]
        #[method_id(@__retain_semantics Other startDate)]
        pub unsafe fn startDate(&self) -> Option<Id<NSDate>>;

        #[cfg(not(any(target_os = "ios")))]
        #[cfg(feature = "Foundation_NSDate")]
        #[method_id(@__retain_semantics Other endDate)]
        pub unsafe fn endDate(&self) -> Option<Id<NSDate>>;

        #[cfg(not(any(target_os = "ios")))]
        #[cfg(feature = "HealthKit_HKWorkoutActivity")]
        #[method_id(@__retain_semantics Other currentActivity)]
        pub unsafe fn currentActivity(&self) -> Id<HKWorkoutActivity>;

        #[cfg(not(any(target_os = "ios")))]
        #[deprecated]
        #[method_id(@__retain_semantics Init initWithActivityType:locationType:)]
        pub unsafe fn initWithActivityType_locationType(
            this: Option<Allocated<Self>>,
            activity_type: HKWorkoutActivityType,
            location_type: HKWorkoutSessionLocationType,
        ) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[cfg(all(
            feature = "Foundation_NSError",
            feature = "HealthKit_HKWorkoutConfiguration"
        ))]
        #[deprecated]
        #[method_id(@__retain_semantics Init initWithConfiguration:error:_)]
        pub unsafe fn initWithConfiguration_error(
            this: Option<Allocated<Self>>,
            workout_configuration: &HKWorkoutConfiguration,
        ) -> Result<Id<Self>, Id<NSError>>;

        #[cfg(not(any(target_os = "ios")))]
        #[cfg(all(
            feature = "Foundation_NSError",
            feature = "HealthKit_HKHealthStore",
            feature = "HealthKit_HKWorkoutConfiguration"
        ))]
        #[method_id(@__retain_semantics Init initWithHealthStore:configuration:error:_)]
        pub unsafe fn initWithHealthStore_configuration_error(
            this: Option<Allocated<Self>>,
            health_store: &HKHealthStore,
            workout_configuration: &HKWorkoutConfiguration,
        ) -> Result<Id<Self>, Id<NSError>>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method(prepare)]
        pub unsafe fn prepare(&self);

        #[cfg(not(any(target_os = "ios")))]
        #[cfg(feature = "Foundation_NSDate")]
        #[method(startActivityWithDate:)]
        pub unsafe fn startActivityWithDate(&self, date: Option<&NSDate>);

        #[cfg(not(any(target_os = "ios")))]
        #[cfg(feature = "Foundation_NSDate")]
        #[method(stopActivityWithDate:)]
        pub unsafe fn stopActivityWithDate(&self, date: Option<&NSDate>);

        #[cfg(not(any(target_os = "ios")))]
        #[method(end)]
        pub unsafe fn end(&self);

        #[cfg(not(any(target_os = "ios")))]
        #[method(pause)]
        pub unsafe fn pause(&self);

        #[cfg(not(any(target_os = "ios")))]
        #[method(resume)]
        pub unsafe fn resume(&self);

        #[cfg(not(any(target_os = "ios")))]
        #[cfg(feature = "HealthKit_HKLiveWorkoutBuilder")]
        #[method_id(@__retain_semantics Other associatedWorkoutBuilder)]
        pub unsafe fn associatedWorkoutBuilder(&self) -> Id<HKLiveWorkoutBuilder>;

        #[cfg(not(any(target_os = "ios")))]
        #[cfg(all(
            feature = "Foundation_NSDate",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString",
            feature = "HealthKit_HKWorkoutConfiguration"
        ))]
        #[method(beginNewActivityWithConfiguration:date:metadata:)]
        pub unsafe fn beginNewActivityWithConfiguration_date_metadata(
            &self,
            workout_configuration: &HKWorkoutConfiguration,
            date: &NSDate,
            metadata: Option<&NSDictionary<NSString, Object>>,
        );

        #[cfg(not(any(target_os = "ios")))]
        #[cfg(feature = "Foundation_NSDate")]
        #[method(endCurrentActivityOnDate:)]
        pub unsafe fn endCurrentActivityOnDate(&self, date: &NSDate);
    }
);

extern_protocol!(
    #[cfg(not(any(target_os = "ios")))]
    pub unsafe trait HKWorkoutSessionDelegate: NSObjectProtocol {
        #[cfg(all(feature = "Foundation_NSDate", feature = "HealthKit_HKWorkoutSession"))]
        #[method(workoutSession:didChangeToState:fromState:date:)]
        unsafe fn workoutSession_didChangeToState_fromState_date(
            &self,
            workout_session: &HKWorkoutSession,
            to_state: HKWorkoutSessionState,
            from_state: HKWorkoutSessionState,
            date: &NSDate,
        );

        #[cfg(all(feature = "Foundation_NSError", feature = "HealthKit_HKWorkoutSession"))]
        #[method(workoutSession:didFailWithError:)]
        unsafe fn workoutSession_didFailWithError(
            &self,
            workout_session: &HKWorkoutSession,
            error: &NSError,
        );

        #[cfg(all(
            feature = "HealthKit_HKWorkoutEvent",
            feature = "HealthKit_HKWorkoutSession"
        ))]
        #[optional]
        #[method(workoutSession:didGenerateEvent:)]
        unsafe fn workoutSession_didGenerateEvent(
            &self,
            workout_session: &HKWorkoutSession,
            event: &HKWorkoutEvent,
        );

        #[cfg(all(
            feature = "Foundation_NSDate",
            feature = "HealthKit_HKWorkoutConfiguration",
            feature = "HealthKit_HKWorkoutSession"
        ))]
        #[optional]
        #[method(workoutSession:didBeginActivityWithConfiguration:date:)]
        unsafe fn workoutSession_didBeginActivityWithConfiguration_date(
            &self,
            workout_session: &HKWorkoutSession,
            workout_configuration: &HKWorkoutConfiguration,
            date: &NSDate,
        );

        #[cfg(all(
            feature = "Foundation_NSDate",
            feature = "HealthKit_HKWorkoutConfiguration",
            feature = "HealthKit_HKWorkoutSession"
        ))]
        #[optional]
        #[method(workoutSession:didEndActivityWithConfiguration:date:)]
        unsafe fn workoutSession_didEndActivityWithConfiguration_date(
            &self,
            workout_session: &HKWorkoutSession,
            workout_configuration: &HKWorkoutConfiguration,
            date: &NSDate,
        );
    }

    #[cfg(not(any(target_os = "ios")))]
    unsafe impl ProtocolType for dyn HKWorkoutSessionDelegate {}
);
