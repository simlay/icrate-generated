//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HealthKit_HKObjectType")]
    /**
     @class         HKObjectType
    @abstract      An abstract class representing a type of object that can be stored by HealthKit.
    */
    pub struct HKObjectType;

    #[cfg(feature = "HealthKit_HKObjectType")]
    unsafe impl ClassType for HKObjectType {
        type Super = NSObject;
    }
);

#[cfg(feature = "HealthKit_HKObjectType")]
/**
 @class         HKObjectType
@abstract      An abstract class representing a type of object that can be stored by HealthKit.
*/
unsafe impl NSCoding for HKObjectType {}

#[cfg(feature = "HealthKit_HKObjectType")]
/**
 @class         HKObjectType
@abstract      An abstract class representing a type of object that can be stored by HealthKit.
*/
unsafe impl NSObjectProtocol for HKObjectType {}

#[cfg(feature = "HealthKit_HKObjectType")]
/**
 @class         HKObjectType
@abstract      An abstract class representing a type of object that can be stored by HealthKit.
*/
unsafe impl NSSecureCoding for HKObjectType {}

extern_methods!(
    /**
     @class         HKObjectType
    @abstract      An abstract class representing a type of object that can be stored by HealthKit.
    */
    #[cfg(feature = "HealthKit_HKObjectType")]
    unsafe impl HKObjectType {
        #[cfg(feature = "Foundation_NSString")]
        /**
         @property      identifier
        @abstract      A unique string identifying a type of health object.
        @discussion    See HKTypeIdentifiers.h for possible values.
        */
        #[method_id(@__retain_semantics Other identifier)]
        pub unsafe fn identifier(&self) -> Id<NSString>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(feature = "HealthKit_HKQuantityType")]
        #[method_id(@__retain_semantics Other quantityTypeForIdentifier:)]
        pub unsafe fn quantityTypeForIdentifier(
            identifier: &HKQuantityTypeIdentifier,
        ) -> Option<Id<HKQuantityType>>;

        #[cfg(feature = "HealthKit_HKCategoryType")]
        #[method_id(@__retain_semantics Other categoryTypeForIdentifier:)]
        pub unsafe fn categoryTypeForIdentifier(
            identifier: &HKCategoryTypeIdentifier,
        ) -> Option<Id<HKCategoryType>>;

        #[cfg(feature = "HealthKit_HKCharacteristicType")]
        #[method_id(@__retain_semantics Other characteristicTypeForIdentifier:)]
        pub unsafe fn characteristicTypeForIdentifier(
            identifier: &HKCharacteristicTypeIdentifier,
        ) -> Option<Id<HKCharacteristicType>>;

        #[cfg(feature = "HealthKit_HKCorrelationType")]
        #[method_id(@__retain_semantics Other correlationTypeForIdentifier:)]
        pub unsafe fn correlationTypeForIdentifier(
            identifier: &HKCorrelationTypeIdentifier,
        ) -> Option<Id<HKCorrelationType>>;

        #[cfg(feature = "HealthKit_HKDocumentType")]
        #[method_id(@__retain_semantics Other documentTypeForIdentifier:)]
        pub unsafe fn documentTypeForIdentifier(
            identifier: &HKDocumentTypeIdentifier,
        ) -> Option<Id<HKDocumentType>>;

        #[cfg(all(feature = "Foundation_NSString", feature = "HealthKit_HKSeriesType"))]
        #[method_id(@__retain_semantics Other seriesTypeForIdentifier:)]
        pub unsafe fn seriesTypeForIdentifier(identifier: &NSString) -> Option<Id<HKSeriesType>>;

        #[cfg(feature = "HealthKit_HKWorkoutType")]
        #[method_id(@__retain_semantics Other workoutType)]
        pub unsafe fn workoutType() -> Id<HKWorkoutType>;

        #[cfg(feature = "HealthKit_HKActivitySummaryType")]
        #[method_id(@__retain_semantics Other activitySummaryType)]
        pub unsafe fn activitySummaryType() -> Id<HKActivitySummaryType>;

        #[cfg(feature = "HealthKit_HKAudiogramSampleType")]
        #[method_id(@__retain_semantics Other audiogramSampleType)]
        pub unsafe fn audiogramSampleType() -> Id<HKAudiogramSampleType>;

        #[cfg(feature = "HealthKit_HKElectrocardiogramType")]
        #[method_id(@__retain_semantics Other electrocardiogramType)]
        pub unsafe fn electrocardiogramType() -> Id<HKElectrocardiogramType>;

        #[cfg(feature = "HealthKit_HKPrescriptionType")]
        #[method_id(@__retain_semantics Other visionPrescriptionType)]
        pub unsafe fn visionPrescriptionType() -> Id<HKPrescriptionType>;

        #[method(requiresPerObjectAuthorization)]
        pub unsafe fn requiresPerObjectAuthorization(&self) -> bool;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HealthKit_HKCharacteristicType")]
    /**
     @class         HKCharacteristicType
    @abstract      Represents a type of object that describes a characteristic of the user (such as date of birth).
    */
    pub struct HKCharacteristicType;

    #[cfg(feature = "HealthKit_HKCharacteristicType")]
    unsafe impl ClassType for HKCharacteristicType {
        #[inherits(NSObject)]
        type Super = HKObjectType;
    }
);

#[cfg(feature = "HealthKit_HKCharacteristicType")]
/**
 @class         HKCharacteristicType
@abstract      Represents a type of object that describes a characteristic of the user (such as date of birth).
*/
unsafe impl NSCoding for HKCharacteristicType {}

#[cfg(feature = "HealthKit_HKCharacteristicType")]
/**
 @class         HKCharacteristicType
@abstract      Represents a type of object that describes a characteristic of the user (such as date of birth).
*/
unsafe impl NSObjectProtocol for HKCharacteristicType {}

#[cfg(feature = "HealthKit_HKCharacteristicType")]
/**
 @class         HKCharacteristicType
@abstract      Represents a type of object that describes a characteristic of the user (such as date of birth).
*/
unsafe impl NSSecureCoding for HKCharacteristicType {}

extern_methods!(
    /**
     @class         HKCharacteristicType
    @abstract      Represents a type of object that describes a characteristic of the user (such as date of birth).
    */
    #[cfg(feature = "HealthKit_HKCharacteristicType")]
    unsafe impl HKCharacteristicType {}
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HealthKit_HKSampleType")]
    /**
     @class         HKSampleType
    @abstract      Represents a type of HKSample.
    */
    pub struct HKSampleType;

    #[cfg(feature = "HealthKit_HKSampleType")]
    unsafe impl ClassType for HKSampleType {
        #[inherits(NSObject)]
        type Super = HKObjectType;
    }
);

#[cfg(feature = "HealthKit_HKSampleType")]
/**
 @class         HKSampleType
@abstract      Represents a type of HKSample.
*/
unsafe impl NSCoding for HKSampleType {}

#[cfg(feature = "HealthKit_HKSampleType")]
/**
 @class         HKSampleType
@abstract      Represents a type of HKSample.
*/
unsafe impl NSObjectProtocol for HKSampleType {}

#[cfg(feature = "HealthKit_HKSampleType")]
/**
 @class         HKSampleType
@abstract      Represents a type of HKSample.
*/
unsafe impl NSSecureCoding for HKSampleType {}

extern_methods!(
    /**
     @class         HKSampleType
    @abstract      Represents a type of HKSample.
    */
    #[cfg(feature = "HealthKit_HKSampleType")]
    unsafe impl HKSampleType {
        /**
         @property      isMaximumDurationRestricted
        @abstract      Returns YES if the start and end date for samples of this type are restricted by a maximum duration.
        */
        #[method(isMaximumDurationRestricted)]
        pub unsafe fn isMaximumDurationRestricted(&self) -> bool;

        /**
         @property      maximumAllowedDuration
        @abstract      When the duration is restricted for samples of this type, returns the maximum duration allowed,
        calculated as the difference between end and start dates.
        @discussion    Throws an exception if there is no maximum restriction on duration for samples of this type.
        */
        #[method(maximumAllowedDuration)]
        pub unsafe fn maximumAllowedDuration(&self) -> NSTimeInterval;

        /**
         @property      isMinimumDurationRestricted
        @abstract      Returns YES if the start and end date for samples of this type are restricted by a minimum duration.
        */
        #[method(isMinimumDurationRestricted)]
        pub unsafe fn isMinimumDurationRestricted(&self) -> bool;

        /**
         @property      minimumAllowedDuration
        @abstract      When the duration is restricted for samples of this type, returns the minimum duration allowed,
        calculated as the difference between end and start dates.
        @discussion    Throws an exception if there is no minimum restriction on duration for samples of this type.
        */
        #[method(minimumAllowedDuration)]
        pub unsafe fn minimumAllowedDuration(&self) -> NSTimeInterval;

        /**
         @property      allowsRecalibrationForEstimates
        @abstract      Returns YES if first-party samples of this type are produced using a prediction algorithm, and that algorithm supports recalibration. To recalibrate the
        estimates for a sample type, see -[HKHealthStore recalibrateEstimatesForSampleType:atDate:completion:]
        */
        #[method(allowsRecalibrationForEstimates)]
        pub unsafe fn allowsRecalibrationForEstimates(&self) -> bool;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HealthKit_HKCategoryType")]
    /**
     @class         HKCategoryType
    @abstract      Represent a type of HKCategorySample.
    */
    pub struct HKCategoryType;

    #[cfg(feature = "HealthKit_HKCategoryType")]
    unsafe impl ClassType for HKCategoryType {
        #[inherits(HKObjectType, NSObject)]
        type Super = HKSampleType;
    }
);

#[cfg(feature = "HealthKit_HKCategoryType")]
/**
 @class         HKCategoryType
@abstract      Represent a type of HKCategorySample.
*/
unsafe impl NSCoding for HKCategoryType {}

#[cfg(feature = "HealthKit_HKCategoryType")]
/**
 @class         HKCategoryType
@abstract      Represent a type of HKCategorySample.
*/
unsafe impl NSObjectProtocol for HKCategoryType {}

#[cfg(feature = "HealthKit_HKCategoryType")]
/**
 @class         HKCategoryType
@abstract      Represent a type of HKCategorySample.
*/
unsafe impl NSSecureCoding for HKCategoryType {}

extern_methods!(
    /**
     @class         HKCategoryType
    @abstract      Represent a type of HKCategorySample.
    */
    #[cfg(feature = "HealthKit_HKCategoryType")]
    unsafe impl HKCategoryType {}
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HealthKit_HKCorrelationType")]
    /**
     @class         HKCorrelationType
    @abstract      Represents a type of HKCorrelation
    */
    pub struct HKCorrelationType;

    #[cfg(feature = "HealthKit_HKCorrelationType")]
    unsafe impl ClassType for HKCorrelationType {
        #[inherits(HKObjectType, NSObject)]
        type Super = HKSampleType;
    }
);

#[cfg(feature = "HealthKit_HKCorrelationType")]
/**
 @class         HKCorrelationType
@abstract      Represents a type of HKCorrelation
*/
unsafe impl NSCoding for HKCorrelationType {}

#[cfg(feature = "HealthKit_HKCorrelationType")]
/**
 @class         HKCorrelationType
@abstract      Represents a type of HKCorrelation
*/
unsafe impl NSObjectProtocol for HKCorrelationType {}

#[cfg(feature = "HealthKit_HKCorrelationType")]
/**
 @class         HKCorrelationType
@abstract      Represents a type of HKCorrelation
*/
unsafe impl NSSecureCoding for HKCorrelationType {}

extern_methods!(
    /**
     @class         HKCorrelationType
    @abstract      Represents a type of HKCorrelation
    */
    #[cfg(feature = "HealthKit_HKCorrelationType")]
    unsafe impl HKCorrelationType {}
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HealthKit_HKDocumentType")]
    /**
     @class         HKDocumentType
    @abstract      Represents a type of HKDocument.
    */
    pub struct HKDocumentType;

    #[cfg(feature = "HealthKit_HKDocumentType")]
    unsafe impl ClassType for HKDocumentType {
        #[inherits(HKObjectType, NSObject)]
        type Super = HKSampleType;
    }
);

#[cfg(feature = "HealthKit_HKDocumentType")]
/**
 @class         HKDocumentType
@abstract      Represents a type of HKDocument.
*/
unsafe impl NSCoding for HKDocumentType {}

#[cfg(feature = "HealthKit_HKDocumentType")]
/**
 @class         HKDocumentType
@abstract      Represents a type of HKDocument.
*/
unsafe impl NSObjectProtocol for HKDocumentType {}

#[cfg(feature = "HealthKit_HKDocumentType")]
/**
 @class         HKDocumentType
@abstract      Represents a type of HKDocument.
*/
unsafe impl NSSecureCoding for HKDocumentType {}

extern_methods!(
    /**
     @class         HKDocumentType
    @abstract      Represents a type of HKDocument.
    */
    #[cfg(feature = "HealthKit_HKDocumentType")]
    unsafe impl HKDocumentType {}
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HealthKit_HKQuantityType")]
    /**
     @class         HKQuantityType
    @abstract      Represents types of HKQuantitySamples.
    */
    pub struct HKQuantityType;

    #[cfg(feature = "HealthKit_HKQuantityType")]
    unsafe impl ClassType for HKQuantityType {
        #[inherits(HKObjectType, NSObject)]
        type Super = HKSampleType;
    }
);

#[cfg(feature = "HealthKit_HKQuantityType")]
/**
 @class         HKQuantityType
@abstract      Represents types of HKQuantitySamples.
*/
unsafe impl NSCoding for HKQuantityType {}

#[cfg(feature = "HealthKit_HKQuantityType")]
/**
 @class         HKQuantityType
@abstract      Represents types of HKQuantitySamples.
*/
unsafe impl NSObjectProtocol for HKQuantityType {}

#[cfg(feature = "HealthKit_HKQuantityType")]
/**
 @class         HKQuantityType
@abstract      Represents types of HKQuantitySamples.
*/
unsafe impl NSSecureCoding for HKQuantityType {}

extern_methods!(
    /**
     @class         HKQuantityType
    @abstract      Represents types of HKQuantitySamples.
    */
    #[cfg(feature = "HealthKit_HKQuantityType")]
    unsafe impl HKQuantityType {
        #[method(aggregationStyle)]
        pub unsafe fn aggregationStyle(&self) -> HKQuantityAggregationStyle;

        #[cfg(feature = "HealthKit_HKUnit")]
        #[method(isCompatibleWithUnit:)]
        pub unsafe fn isCompatibleWithUnit(&self, unit: &HKUnit) -> bool;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HealthKit_HKWorkoutType")]
    /**
     @class         HKWorkoutType
    @abstract      Represents a workout or exercise
    */
    pub struct HKWorkoutType;

    #[cfg(feature = "HealthKit_HKWorkoutType")]
    unsafe impl ClassType for HKWorkoutType {
        #[inherits(HKObjectType, NSObject)]
        type Super = HKSampleType;
    }
);

#[cfg(feature = "HealthKit_HKWorkoutType")]
/**
 @class         HKWorkoutType
@abstract      Represents a workout or exercise
*/
unsafe impl NSCoding for HKWorkoutType {}

#[cfg(feature = "HealthKit_HKWorkoutType")]
/**
 @class         HKWorkoutType
@abstract      Represents a workout or exercise
*/
unsafe impl NSObjectProtocol for HKWorkoutType {}

#[cfg(feature = "HealthKit_HKWorkoutType")]
/**
 @class         HKWorkoutType
@abstract      Represents a workout or exercise
*/
unsafe impl NSSecureCoding for HKWorkoutType {}

extern_methods!(
    /**
     @class         HKWorkoutType
    @abstract      Represents a workout or exercise
    */
    #[cfg(feature = "HealthKit_HKWorkoutType")]
    unsafe impl HKWorkoutType {}
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HealthKit_HKSeriesType")]
    /**
     @class         HKSeriesType
    @abstract      Represents a type of HKSeriesSample
    */
    pub struct HKSeriesType;

    #[cfg(feature = "HealthKit_HKSeriesType")]
    unsafe impl ClassType for HKSeriesType {
        #[inherits(HKObjectType, NSObject)]
        type Super = HKSampleType;
    }
);

#[cfg(feature = "HealthKit_HKSeriesType")]
/**
 @class         HKSeriesType
@abstract      Represents a type of HKSeriesSample
*/
unsafe impl NSCoding for HKSeriesType {}

#[cfg(feature = "HealthKit_HKSeriesType")]
/**
 @class         HKSeriesType
@abstract      Represents a type of HKSeriesSample
*/
unsafe impl NSObjectProtocol for HKSeriesType {}

#[cfg(feature = "HealthKit_HKSeriesType")]
/**
 @class         HKSeriesType
@abstract      Represents a type of HKSeriesSample
*/
unsafe impl NSSecureCoding for HKSeriesType {}

extern_methods!(
    /**
     @class         HKSeriesType
    @abstract      Represents a type of HKSeriesSample
    */
    #[cfg(feature = "HealthKit_HKSeriesType")]
    unsafe impl HKSeriesType {
        #[method_id(@__retain_semantics Other workoutRouteType)]
        pub unsafe fn workoutRouteType() -> Id<Self>;

        #[method_id(@__retain_semantics Other heartbeatSeriesType)]
        pub unsafe fn heartbeatSeriesType() -> Id<Self>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HealthKit_HKActivitySummaryType")]
    /**
     @class         HKActivitySummaryType
    @abstract      Represents an HKActivitySummary
    */
    pub struct HKActivitySummaryType;

    #[cfg(feature = "HealthKit_HKActivitySummaryType")]
    unsafe impl ClassType for HKActivitySummaryType {
        #[inherits(NSObject)]
        type Super = HKObjectType;
    }
);

#[cfg(feature = "HealthKit_HKActivitySummaryType")]
/**
 @class         HKActivitySummaryType
@abstract      Represents an HKActivitySummary
*/
unsafe impl NSCoding for HKActivitySummaryType {}

#[cfg(feature = "HealthKit_HKActivitySummaryType")]
/**
 @class         HKActivitySummaryType
@abstract      Represents an HKActivitySummary
*/
unsafe impl NSObjectProtocol for HKActivitySummaryType {}

#[cfg(feature = "HealthKit_HKActivitySummaryType")]
/**
 @class         HKActivitySummaryType
@abstract      Represents an HKActivitySummary
*/
unsafe impl NSSecureCoding for HKActivitySummaryType {}

extern_methods!(
    /**
     @class         HKActivitySummaryType
    @abstract      Represents an HKActivitySummary
    */
    #[cfg(feature = "HealthKit_HKActivitySummaryType")]
    unsafe impl HKActivitySummaryType {}
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HealthKit_HKAudiogramSampleType")]
    /**
     @class    HKAudiogramSampleType
    @abstract Represents an audiogram sample.
    */
    pub struct HKAudiogramSampleType;

    #[cfg(feature = "HealthKit_HKAudiogramSampleType")]
    unsafe impl ClassType for HKAudiogramSampleType {
        #[inherits(HKObjectType, NSObject)]
        type Super = HKSampleType;
    }
);

#[cfg(feature = "HealthKit_HKAudiogramSampleType")]
/**
 @class    HKAudiogramSampleType
@abstract Represents an audiogram sample.
*/
unsafe impl NSCoding for HKAudiogramSampleType {}

#[cfg(feature = "HealthKit_HKAudiogramSampleType")]
/**
 @class    HKAudiogramSampleType
@abstract Represents an audiogram sample.
*/
unsafe impl NSObjectProtocol for HKAudiogramSampleType {}

#[cfg(feature = "HealthKit_HKAudiogramSampleType")]
/**
 @class    HKAudiogramSampleType
@abstract Represents an audiogram sample.
*/
unsafe impl NSSecureCoding for HKAudiogramSampleType {}

extern_methods!(
    /**
     @class    HKAudiogramSampleType
    @abstract Represents an audiogram sample.
    */
    #[cfg(feature = "HealthKit_HKAudiogramSampleType")]
    unsafe impl HKAudiogramSampleType {}
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HealthKit_HKElectrocardiogramType")]
    /**
     @class    HKElectrocardiogramType
    @abstract Represents an electrocardiogram sample.
    */
    pub struct HKElectrocardiogramType;

    #[cfg(feature = "HealthKit_HKElectrocardiogramType")]
    unsafe impl ClassType for HKElectrocardiogramType {
        #[inherits(HKObjectType, NSObject)]
        type Super = HKSampleType;
    }
);

#[cfg(feature = "HealthKit_HKElectrocardiogramType")]
/**
 @class    HKElectrocardiogramType
@abstract Represents an electrocardiogram sample.
*/
unsafe impl NSCoding for HKElectrocardiogramType {}

#[cfg(feature = "HealthKit_HKElectrocardiogramType")]
/**
 @class    HKElectrocardiogramType
@abstract Represents an electrocardiogram sample.
*/
unsafe impl NSObjectProtocol for HKElectrocardiogramType {}

#[cfg(feature = "HealthKit_HKElectrocardiogramType")]
/**
 @class    HKElectrocardiogramType
@abstract Represents an electrocardiogram sample.
*/
unsafe impl NSSecureCoding for HKElectrocardiogramType {}

extern_methods!(
    /**
     @class    HKElectrocardiogramType
    @abstract Represents an electrocardiogram sample.
    */
    #[cfg(feature = "HealthKit_HKElectrocardiogramType")]
    unsafe impl HKElectrocardiogramType {}
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HealthKit_HKPrescriptionType")]
    /**
     @class         HKPrescriptionType
    @abstract      Represents a prescription type
    */
    pub struct HKPrescriptionType;

    #[cfg(feature = "HealthKit_HKPrescriptionType")]
    unsafe impl ClassType for HKPrescriptionType {
        #[inherits(HKObjectType, NSObject)]
        type Super = HKSampleType;
    }
);

#[cfg(feature = "HealthKit_HKPrescriptionType")]
/**
 @class         HKPrescriptionType
@abstract      Represents a prescription type
*/
unsafe impl NSCoding for HKPrescriptionType {}

#[cfg(feature = "HealthKit_HKPrescriptionType")]
/**
 @class         HKPrescriptionType
@abstract      Represents a prescription type
*/
unsafe impl NSObjectProtocol for HKPrescriptionType {}

#[cfg(feature = "HealthKit_HKPrescriptionType")]
/**
 @class         HKPrescriptionType
@abstract      Represents a prescription type
*/
unsafe impl NSSecureCoding for HKPrescriptionType {}

extern_methods!(
    /**
     @class         HKPrescriptionType
    @abstract      Represents a prescription type
    */
    #[cfg(feature = "HealthKit_HKPrescriptionType")]
    unsafe impl HKPrescriptionType {}
);
