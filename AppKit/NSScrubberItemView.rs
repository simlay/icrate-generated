//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSScrubberArrangedView")]
    pub struct NSScrubberArrangedView;

    #[cfg(feature = "AppKit_NSScrubberArrangedView")]
    unsafe impl ClassType for NSScrubberArrangedView {
        #[inherits(NSResponder, NSObject)]
        type Super = NSView;
    }
);

#[cfg(feature = "AppKit_NSScrubberArrangedView")]
unsafe impl NSAccessibility for NSScrubberArrangedView {}

#[cfg(feature = "AppKit_NSScrubberArrangedView")]
unsafe impl NSAccessibilityElementProtocol for NSScrubberArrangedView {}

#[cfg(feature = "AppKit_NSScrubberArrangedView")]
unsafe impl NSAnimatablePropertyContainer for NSScrubberArrangedView {}

#[cfg(feature = "AppKit_NSScrubberArrangedView")]
unsafe impl NSAppearanceCustomization for NSScrubberArrangedView {}

#[cfg(feature = "AppKit_NSScrubberArrangedView")]
unsafe impl NSCoding for NSScrubberArrangedView {}

#[cfg(feature = "AppKit_NSScrubberArrangedView")]
unsafe impl NSDraggingDestination for NSScrubberArrangedView {}

#[cfg(feature = "AppKit_NSScrubberArrangedView")]
unsafe impl NSObjectProtocol for NSScrubberArrangedView {}

#[cfg(feature = "AppKit_NSScrubberArrangedView")]
unsafe impl NSUserInterfaceItemIdentification for NSScrubberArrangedView {}

extern_methods!(
    #[cfg(feature = "AppKit_NSScrubberArrangedView")]
    unsafe impl NSScrubberArrangedView {
        #[method(isSelected)]
        pub unsafe fn isSelected(&self) -> bool;

        #[method(setSelected:)]
        pub unsafe fn setSelected(&self, selected: bool);

        #[method(isHighlighted)]
        pub unsafe fn isHighlighted(&self) -> bool;

        #[method(setHighlighted:)]
        pub unsafe fn setHighlighted(&self, highlighted: bool);

        #[cfg(feature = "AppKit_NSScrubberLayoutAttributes")]
        #[method(applyLayoutAttributes:)]
        pub unsafe fn applyLayoutAttributes(&self, layout_attributes: &NSScrubberLayoutAttributes);
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSScrubberSelectionView")]
    /**
     @class NSScrubberSelectionView
    @abstract The base view class for all selection decorations used by the @c NSScrubber control.
    */
    pub struct NSScrubberSelectionView;

    #[cfg(feature = "AppKit_NSScrubberSelectionView")]
    unsafe impl ClassType for NSScrubberSelectionView {
        #[inherits(NSView, NSResponder, NSObject)]
        type Super = NSScrubberArrangedView;
    }
);

#[cfg(feature = "AppKit_NSScrubberSelectionView")]
/**
 @class NSScrubberSelectionView
@abstract The base view class for all selection decorations used by the @c NSScrubber control.
*/
unsafe impl NSAccessibility for NSScrubberSelectionView {}

#[cfg(feature = "AppKit_NSScrubberSelectionView")]
/**
 @class NSScrubberSelectionView
@abstract The base view class for all selection decorations used by the @c NSScrubber control.
*/
unsafe impl NSAccessibilityElementProtocol for NSScrubberSelectionView {}

#[cfg(feature = "AppKit_NSScrubberSelectionView")]
/**
 @class NSScrubberSelectionView
@abstract The base view class for all selection decorations used by the @c NSScrubber control.
*/
unsafe impl NSAnimatablePropertyContainer for NSScrubberSelectionView {}

#[cfg(feature = "AppKit_NSScrubberSelectionView")]
/**
 @class NSScrubberSelectionView
@abstract The base view class for all selection decorations used by the @c NSScrubber control.
*/
unsafe impl NSAppearanceCustomization for NSScrubberSelectionView {}

#[cfg(feature = "AppKit_NSScrubberSelectionView")]
/**
 @class NSScrubberSelectionView
@abstract The base view class for all selection decorations used by the @c NSScrubber control.
*/
unsafe impl NSCoding for NSScrubberSelectionView {}

#[cfg(feature = "AppKit_NSScrubberSelectionView")]
/**
 @class NSScrubberSelectionView
@abstract The base view class for all selection decorations used by the @c NSScrubber control.
*/
unsafe impl NSDraggingDestination for NSScrubberSelectionView {}

#[cfg(feature = "AppKit_NSScrubberSelectionView")]
/**
 @class NSScrubberSelectionView
@abstract The base view class for all selection decorations used by the @c NSScrubber control.
*/
unsafe impl NSObjectProtocol for NSScrubberSelectionView {}

#[cfg(feature = "AppKit_NSScrubberSelectionView")]
/**
 @class NSScrubberSelectionView
@abstract The base view class for all selection decorations used by the @c NSScrubber control.
*/
unsafe impl NSUserInterfaceItemIdentification for NSScrubberSelectionView {}

extern_methods!(
    /**
     @class NSScrubberSelectionView
    @abstract The base view class for all selection decorations used by the @c NSScrubber control.
    */
    #[cfg(feature = "AppKit_NSScrubberSelectionView")]
    unsafe impl NSScrubberSelectionView {}
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSScrubberItemView")]
    /**
     @class NSScrubberItemView
    @abstract The base view class that is arranged by a @c NSScrubber control.
    */
    pub struct NSScrubberItemView;

    #[cfg(feature = "AppKit_NSScrubberItemView")]
    unsafe impl ClassType for NSScrubberItemView {
        #[inherits(NSView, NSResponder, NSObject)]
        type Super = NSScrubberArrangedView;
    }
);

#[cfg(feature = "AppKit_NSScrubberItemView")]
/**
 @class NSScrubberItemView
@abstract The base view class that is arranged by a @c NSScrubber control.
*/
unsafe impl NSAccessibility for NSScrubberItemView {}

#[cfg(feature = "AppKit_NSScrubberItemView")]
/**
 @class NSScrubberItemView
@abstract The base view class that is arranged by a @c NSScrubber control.
*/
unsafe impl NSAccessibilityElementProtocol for NSScrubberItemView {}

#[cfg(feature = "AppKit_NSScrubberItemView")]
/**
 @class NSScrubberItemView
@abstract The base view class that is arranged by a @c NSScrubber control.
*/
unsafe impl NSAnimatablePropertyContainer for NSScrubberItemView {}

#[cfg(feature = "AppKit_NSScrubberItemView")]
/**
 @class NSScrubberItemView
@abstract The base view class that is arranged by a @c NSScrubber control.
*/
unsafe impl NSAppearanceCustomization for NSScrubberItemView {}

#[cfg(feature = "AppKit_NSScrubberItemView")]
/**
 @class NSScrubberItemView
@abstract The base view class that is arranged by a @c NSScrubber control.
*/
unsafe impl NSCoding for NSScrubberItemView {}

#[cfg(feature = "AppKit_NSScrubberItemView")]
/**
 @class NSScrubberItemView
@abstract The base view class that is arranged by a @c NSScrubber control.
*/
unsafe impl NSDraggingDestination for NSScrubberItemView {}

#[cfg(feature = "AppKit_NSScrubberItemView")]
/**
 @class NSScrubberItemView
@abstract The base view class that is arranged by a @c NSScrubber control.
*/
unsafe impl NSObjectProtocol for NSScrubberItemView {}

#[cfg(feature = "AppKit_NSScrubberItemView")]
/**
 @class NSScrubberItemView
@abstract The base view class that is arranged by a @c NSScrubber control.
*/
unsafe impl NSUserInterfaceItemIdentification for NSScrubberItemView {}

extern_methods!(
    /**
     @class NSScrubberItemView
    @abstract The base view class that is arranged by a @c NSScrubber control.
    */
    #[cfg(feature = "AppKit_NSScrubberItemView")]
    unsafe impl NSScrubberItemView {}
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSScrubberTextItemView")]
    /**
     @class NSScrubberTextItemView
    @abstract A simple @c NSScrubberItemView for displaying text. The -fittingSize method can be used to measure the smallest size for the view which fits the title without truncating.
    */
    pub struct NSScrubberTextItemView;

    #[cfg(feature = "AppKit_NSScrubberTextItemView")]
    unsafe impl ClassType for NSScrubberTextItemView {
        #[inherits(NSScrubberArrangedView, NSView, NSResponder, NSObject)]
        type Super = NSScrubberItemView;
    }
);

#[cfg(feature = "AppKit_NSScrubberTextItemView")]
/**
 @class NSScrubberTextItemView
@abstract A simple @c NSScrubberItemView for displaying text. The -fittingSize method can be used to measure the smallest size for the view which fits the title without truncating.
*/
unsafe impl NSAccessibility for NSScrubberTextItemView {}

#[cfg(feature = "AppKit_NSScrubberTextItemView")]
/**
 @class NSScrubberTextItemView
@abstract A simple @c NSScrubberItemView for displaying text. The -fittingSize method can be used to measure the smallest size for the view which fits the title without truncating.
*/
unsafe impl NSAccessibilityElementProtocol for NSScrubberTextItemView {}

#[cfg(feature = "AppKit_NSScrubberTextItemView")]
/**
 @class NSScrubberTextItemView
@abstract A simple @c NSScrubberItemView for displaying text. The -fittingSize method can be used to measure the smallest size for the view which fits the title without truncating.
*/
unsafe impl NSAnimatablePropertyContainer for NSScrubberTextItemView {}

#[cfg(feature = "AppKit_NSScrubberTextItemView")]
/**
 @class NSScrubberTextItemView
@abstract A simple @c NSScrubberItemView for displaying text. The -fittingSize method can be used to measure the smallest size for the view which fits the title without truncating.
*/
unsafe impl NSAppearanceCustomization for NSScrubberTextItemView {}

#[cfg(feature = "AppKit_NSScrubberTextItemView")]
/**
 @class NSScrubberTextItemView
@abstract A simple @c NSScrubberItemView for displaying text. The -fittingSize method can be used to measure the smallest size for the view which fits the title without truncating.
*/
unsafe impl NSCoding for NSScrubberTextItemView {}

#[cfg(feature = "AppKit_NSScrubberTextItemView")]
/**
 @class NSScrubberTextItemView
@abstract A simple @c NSScrubberItemView for displaying text. The -fittingSize method can be used to measure the smallest size for the view which fits the title without truncating.
*/
unsafe impl NSDraggingDestination for NSScrubberTextItemView {}

#[cfg(feature = "AppKit_NSScrubberTextItemView")]
/**
 @class NSScrubberTextItemView
@abstract A simple @c NSScrubberItemView for displaying text. The -fittingSize method can be used to measure the smallest size for the view which fits the title without truncating.
*/
unsafe impl NSObjectProtocol for NSScrubberTextItemView {}

#[cfg(feature = "AppKit_NSScrubberTextItemView")]
/**
 @class NSScrubberTextItemView
@abstract A simple @c NSScrubberItemView for displaying text. The -fittingSize method can be used to measure the smallest size for the view which fits the title without truncating.
*/
unsafe impl NSUserInterfaceItemIdentification for NSScrubberTextItemView {}

extern_methods!(
    /**
     @class NSScrubberTextItemView
    @abstract A simple @c NSScrubberItemView for displaying text. The -fittingSize method can be used to measure the smallest size for the view which fits the title without truncating.
    */
    #[cfg(feature = "AppKit_NSScrubberTextItemView")]
    unsafe impl NSScrubberTextItemView {
        #[cfg(feature = "AppKit_NSTextField")]
        #[method_id(@__retain_semantics Other textField)]
        pub unsafe fn textField(&self) -> Id<NSTextField>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other title)]
        pub unsafe fn title(&self) -> Id<NSString>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setTitle:)]
        pub unsafe fn setTitle(&self, title: &NSString);
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSScrubberImageItemView")]
    /**
     @class NSScrubberTextItemView
    @abstract A simple @c NSScrubberItemView for displaying an image.
    @discussion If the provided image is larger than the view's frame, it is scaled proportionally to fill the entire frame. The cropped portion of the image is determined by the @c imageAlignment property.
    */
    pub struct NSScrubberImageItemView;

    #[cfg(feature = "AppKit_NSScrubberImageItemView")]
    unsafe impl ClassType for NSScrubberImageItemView {
        #[inherits(NSScrubberArrangedView, NSView, NSResponder, NSObject)]
        type Super = NSScrubberItemView;
    }
);

#[cfg(feature = "AppKit_NSScrubberImageItemView")]
/**
 @class NSScrubberTextItemView
@abstract A simple @c NSScrubberItemView for displaying an image.
@discussion If the provided image is larger than the view's frame, it is scaled proportionally to fill the entire frame. The cropped portion of the image is determined by the @c imageAlignment property.
*/
unsafe impl NSAccessibility for NSScrubberImageItemView {}

#[cfg(feature = "AppKit_NSScrubberImageItemView")]
/**
 @class NSScrubberTextItemView
@abstract A simple @c NSScrubberItemView for displaying an image.
@discussion If the provided image is larger than the view's frame, it is scaled proportionally to fill the entire frame. The cropped portion of the image is determined by the @c imageAlignment property.
*/
unsafe impl NSAccessibilityElementProtocol for NSScrubberImageItemView {}

#[cfg(feature = "AppKit_NSScrubberImageItemView")]
/**
 @class NSScrubberTextItemView
@abstract A simple @c NSScrubberItemView for displaying an image.
@discussion If the provided image is larger than the view's frame, it is scaled proportionally to fill the entire frame. The cropped portion of the image is determined by the @c imageAlignment property.
*/
unsafe impl NSAnimatablePropertyContainer for NSScrubberImageItemView {}

#[cfg(feature = "AppKit_NSScrubberImageItemView")]
/**
 @class NSScrubberTextItemView
@abstract A simple @c NSScrubberItemView for displaying an image.
@discussion If the provided image is larger than the view's frame, it is scaled proportionally to fill the entire frame. The cropped portion of the image is determined by the @c imageAlignment property.
*/
unsafe impl NSAppearanceCustomization for NSScrubberImageItemView {}

#[cfg(feature = "AppKit_NSScrubberImageItemView")]
/**
 @class NSScrubberTextItemView
@abstract A simple @c NSScrubberItemView for displaying an image.
@discussion If the provided image is larger than the view's frame, it is scaled proportionally to fill the entire frame. The cropped portion of the image is determined by the @c imageAlignment property.
*/
unsafe impl NSCoding for NSScrubberImageItemView {}

#[cfg(feature = "AppKit_NSScrubberImageItemView")]
/**
 @class NSScrubberTextItemView
@abstract A simple @c NSScrubberItemView for displaying an image.
@discussion If the provided image is larger than the view's frame, it is scaled proportionally to fill the entire frame. The cropped portion of the image is determined by the @c imageAlignment property.
*/
unsafe impl NSDraggingDestination for NSScrubberImageItemView {}

#[cfg(feature = "AppKit_NSScrubberImageItemView")]
/**
 @class NSScrubberTextItemView
@abstract A simple @c NSScrubberItemView for displaying an image.
@discussion If the provided image is larger than the view's frame, it is scaled proportionally to fill the entire frame. The cropped portion of the image is determined by the @c imageAlignment property.
*/
unsafe impl NSObjectProtocol for NSScrubberImageItemView {}

#[cfg(feature = "AppKit_NSScrubberImageItemView")]
/**
 @class NSScrubberTextItemView
@abstract A simple @c NSScrubberItemView for displaying an image.
@discussion If the provided image is larger than the view's frame, it is scaled proportionally to fill the entire frame. The cropped portion of the image is determined by the @c imageAlignment property.
*/
unsafe impl NSUserInterfaceItemIdentification for NSScrubberImageItemView {}

extern_methods!(
    /**
     @class NSScrubberTextItemView
    @abstract A simple @c NSScrubberItemView for displaying an image.
    @discussion If the provided image is larger than the view's frame, it is scaled proportionally to fill the entire frame. The cropped portion of the image is determined by the @c imageAlignment property.
    */
    #[cfg(feature = "AppKit_NSScrubberImageItemView")]
    unsafe impl NSScrubberImageItemView {
        #[cfg(feature = "AppKit_NSImageView")]
        #[method_id(@__retain_semantics Other imageView)]
        pub unsafe fn imageView(&self) -> Id<NSImageView>;

        #[cfg(feature = "AppKit_NSImage")]
        #[method_id(@__retain_semantics Other image)]
        pub unsafe fn image(&self) -> Id<NSImage>;

        #[cfg(feature = "AppKit_NSImage")]
        #[method(setImage:)]
        pub unsafe fn setImage(&self, image: &NSImage);

        #[method(imageAlignment)]
        pub unsafe fn imageAlignment(&self) -> NSImageAlignment;

        #[method(setImageAlignment:)]
        pub unsafe fn setImageAlignment(&self, image_alignment: NSImageAlignment);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSView`
    #[cfg(feature = "AppKit_NSScrubberArrangedView")]
    unsafe impl NSScrubberArrangedView {
        #[method_id(@__retain_semantics Init initWithFrame:)]
        pub unsafe fn initWithFrame(this: Option<Allocated<Self>>, frame_rect: NSRect) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSView`
    /**
     @class NSScrubberSelectionView
    @abstract The base view class for all selection decorations used by the @c NSScrubber control.
    */
    #[cfg(feature = "AppKit_NSScrubberSelectionView")]
    unsafe impl NSScrubberSelectionView {
        #[method_id(@__retain_semantics Init initWithFrame:)]
        pub unsafe fn initWithFrame(this: Option<Allocated<Self>>, frame_rect: NSRect) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSView`
    /**
     @class NSScrubberItemView
    @abstract The base view class that is arranged by a @c NSScrubber control.
    */
    #[cfg(feature = "AppKit_NSScrubberItemView")]
    unsafe impl NSScrubberItemView {
        #[method_id(@__retain_semantics Init initWithFrame:)]
        pub unsafe fn initWithFrame(this: Option<Allocated<Self>>, frame_rect: NSRect) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSView`
    /**
     @class NSScrubberTextItemView
    @abstract A simple @c NSScrubberItemView for displaying text. The -fittingSize method can be used to measure the smallest size for the view which fits the title without truncating.
    */
    #[cfg(feature = "AppKit_NSScrubberTextItemView")]
    unsafe impl NSScrubberTextItemView {
        #[method_id(@__retain_semantics Init initWithFrame:)]
        pub unsafe fn initWithFrame(this: Option<Allocated<Self>>, frame_rect: NSRect) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSView`
    /**
     @class NSScrubberTextItemView
    @abstract A simple @c NSScrubberItemView for displaying an image.
    @discussion If the provided image is larger than the view's frame, it is scaled proportionally to fill the entire frame. The cropped portion of the image is determined by the @c imageAlignment property.
    */
    #[cfg(feature = "AppKit_NSScrubberImageItemView")]
    unsafe impl NSScrubberImageItemView {
        #[method_id(@__retain_semantics Init initWithFrame:)]
        pub unsafe fn initWithFrame(this: Option<Allocated<Self>>, frame_rect: NSRect) -> Id<Self>;
    }
);
