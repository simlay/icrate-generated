//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSPathComponentCell")]
    /**
      Use the 'stringValue' or 'attributedStringValue' to set the display title for this component cell. Use 'image' and 'setImage:' to control the icon displayed for this component cell.
    */
    pub struct NSPathComponentCell;

    #[cfg(feature = "AppKit_NSPathComponentCell")]
    unsafe impl ClassType for NSPathComponentCell {
        #[inherits(NSActionCell, NSCell, NSObject)]
        type Super = NSTextFieldCell;
    }
);

#[cfg(feature = "AppKit_NSPathComponentCell")]
/**
  Use the 'stringValue' or 'attributedStringValue' to set the display title for this component cell. Use 'image' and 'setImage:' to control the icon displayed for this component cell.
*/
unsafe impl NSAccessibility for NSPathComponentCell {}

#[cfg(feature = "AppKit_NSPathComponentCell")]
/**
  Use the 'stringValue' or 'attributedStringValue' to set the display title for this component cell. Use 'image' and 'setImage:' to control the icon displayed for this component cell.
*/
unsafe impl NSAccessibilityElementProtocol for NSPathComponentCell {}

#[cfg(feature = "AppKit_NSPathComponentCell")]
/**
  Use the 'stringValue' or 'attributedStringValue' to set the display title for this component cell. Use 'image' and 'setImage:' to control the icon displayed for this component cell.
*/
unsafe impl NSCoding for NSPathComponentCell {}

#[cfg(feature = "AppKit_NSPathComponentCell")]
/**
  Use the 'stringValue' or 'attributedStringValue' to set the display title for this component cell. Use 'image' and 'setImage:' to control the icon displayed for this component cell.
*/
unsafe impl NSObjectProtocol for NSPathComponentCell {}

#[cfg(feature = "AppKit_NSPathComponentCell")]
/**
  Use the 'stringValue' or 'attributedStringValue' to set the display title for this component cell. Use 'image' and 'setImage:' to control the icon displayed for this component cell.
*/
unsafe impl NSUserInterfaceItemIdentification for NSPathComponentCell {}

extern_methods!(
    /**
      Use the 'stringValue' or 'attributedStringValue' to set the display title for this component cell. Use 'image' and 'setImage:' to control the icon displayed for this component cell.
    */
    #[cfg(feature = "AppKit_NSPathComponentCell")]
    unsafe impl NSPathComponentCell {
        #[cfg(feature = "AppKit_NSImage")]
        /**
          See NSPathComponent.h for details on the image & URL properties.
        */
        #[method_id(@__retain_semantics Other image)]
        pub unsafe fn image(&self) -> Option<Id<NSImage>>;

        #[cfg(feature = "AppKit_NSImage")]
        /**
          See NSPathComponent.h for details on the image & URL properties.
        */
        #[method(setImage:)]
        pub unsafe fn setImage(&self, image: Option<&NSImage>);

        #[cfg(feature = "Foundation_NSURL")]
        #[method_id(@__retain_semantics Other URL)]
        pub unsafe fn URL(&self) -> Option<Id<NSURL>>;

        #[cfg(feature = "Foundation_NSURL")]
        #[method(setURL:)]
        pub unsafe fn setURL(&self, url: Option<&NSURL>);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSTextFieldCell`
    /**
      Use the 'stringValue' or 'attributedStringValue' to set the display title for this component cell. Use 'image' and 'setImage:' to control the icon displayed for this component cell.
    */
    #[cfg(feature = "AppKit_NSPathComponentCell")]
    unsafe impl NSPathComponentCell {
        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Init initTextCell:)]
        pub unsafe fn initTextCell(this: Option<Allocated<Self>>, string: &NSString) -> Id<Self>;

        #[cfg(feature = "AppKit_NSImage")]
        #[method_id(@__retain_semantics Init initImageCell:)]
        pub unsafe fn initImageCell(
            this: Option<Allocated<Self>>,
            image: Option<&NSImage>,
        ) -> Id<Self>;
    }
);
