//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;

ns_closed_enum!(
    #[underlying(NSInteger)]
    #[cfg(not(any(target_os = "tvos", target_os = "watchos")))]
    pub enum CLRegionState {
        #[cfg(not(any(target_os = "tvos", target_os = "watchos")))]
        CLRegionStateUnknown = 0,
        #[cfg(not(any(target_os = "tvos", target_os = "watchos")))]
        CLRegionStateInside = 1,
        #[cfg(not(any(target_os = "tvos", target_os = "watchos")))]
        CLRegionStateOutside = 2,
    }
);

ns_enum!(
    #[underlying(NSInteger)]
    #[cfg(not(any(target_os = "tvos", target_os = "watchos")))]
    pub enum CLProximity {
        #[cfg(not(any(target_os = "tvos", target_os = "watchos")))]
        CLProximityUnknown = 0,
        #[cfg(not(any(target_os = "tvos", target_os = "watchos")))]
        CLProximityImmediate = 1,
        #[cfg(not(any(target_os = "tvos", target_os = "watchos")))]
        CLProximityNear = 2,
        #[cfg(not(any(target_os = "tvos", target_os = "watchos")))]
        CLProximityFar = 3,
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "CoreLocation_CLRegion")]
    pub struct CLRegion;

    #[cfg(feature = "CoreLocation_CLRegion")]
    unsafe impl ClassType for CLRegion {
        type Super = NSObject;
    }
);

#[cfg(feature = "CoreLocation_CLRegion")]
unsafe impl NSCoding for CLRegion {}

#[cfg(feature = "CoreLocation_CLRegion")]
unsafe impl NSObjectProtocol for CLRegion {}

#[cfg(feature = "CoreLocation_CLRegion")]
unsafe impl NSSecureCoding for CLRegion {}

extern_methods!(
    #[cfg(feature = "CoreLocation_CLRegion")]
    unsafe impl CLRegion {
        #[cfg(feature = "Foundation_NSString")]
        #[deprecated = "Please see CLCircularRegion"]
        #[cfg(not(any(target_os = "tvos")))]
        #[method_id(@__retain_semantics Init initCircularRegionWithCenter:radius:identifier:)]
        pub unsafe fn initCircularRegionWithCenter_radius_identifier(
            this: Option<Allocated<Self>>,
            center: CLLocationCoordinate2D,
            radius: CLLocationDistance,
            identifier: &NSString,
        ) -> Id<Self>;

        #[deprecated = "Please see CLCircularRegion"]
        #[cfg(not(any(target_os = "tvos")))]
        #[method(center)]
        pub unsafe fn center(&self) -> CLLocationCoordinate2D;

        #[deprecated = "Please see CLCircularRegion"]
        #[cfg(not(any(target_os = "tvos")))]
        #[method(radius)]
        pub unsafe fn radius(&self) -> CLLocationDistance;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other identifier)]
        pub unsafe fn identifier(&self) -> Id<NSString>;

        #[method(notifyOnEntry)]
        pub unsafe fn notifyOnEntry(&self) -> bool;

        #[method(setNotifyOnEntry:)]
        pub unsafe fn setNotifyOnEntry(&self, notify_on_entry: bool);

        #[method(notifyOnExit)]
        pub unsafe fn notifyOnExit(&self) -> bool;

        #[method(setNotifyOnExit:)]
        pub unsafe fn setNotifyOnExit(&self, notify_on_exit: bool);

        #[deprecated = "Please see CLCircularRegion"]
        #[cfg(not(any(target_os = "tvos")))]
        #[method(containsCoordinate:)]
        pub unsafe fn containsCoordinate(&self, coordinate: CLLocationCoordinate2D) -> bool;
    }
);
