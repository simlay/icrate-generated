//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "CoreLocation_CLCircularRegion")]
    pub struct CLCircularRegion;

    #[cfg(feature = "CoreLocation_CLCircularRegion")]
    unsafe impl ClassType for CLCircularRegion {
        #[inherits(NSObject)]
        type Super = CLRegion;
    }
);

#[cfg(feature = "CoreLocation_CLCircularRegion")]
unsafe impl NSCoding for CLCircularRegion {}

#[cfg(feature = "CoreLocation_CLCircularRegion")]
unsafe impl NSObjectProtocol for CLCircularRegion {}

#[cfg(feature = "CoreLocation_CLCircularRegion")]
unsafe impl NSSecureCoding for CLCircularRegion {}

extern_methods!(
    #[cfg(feature = "CoreLocation_CLCircularRegion")]
    unsafe impl CLCircularRegion {
        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Init initWithCenter:radius:identifier:)]
        pub unsafe fn initWithCenter_radius_identifier(
            this: Option<Allocated<Self>>,
            center: CLLocationCoordinate2D,
            radius: CLLocationDistance,
            identifier: &NSString,
        ) -> Id<Self>;

        #[method(center)]
        pub unsafe fn center(&self) -> CLLocationCoordinate2D;

        #[method(radius)]
        pub unsafe fn radius(&self) -> CLLocationDistance;

        #[method(containsCoordinate:)]
        pub unsafe fn containsCoordinate(&self, coordinate: CLLocationCoordinate2D) -> bool;
    }
);

extern_methods!(
    /// Methods declared on superclass `CLRegion`
    #[cfg(feature = "CoreLocation_CLCircularRegion")]
    unsafe impl CLCircularRegion {
        #[cfg(feature = "Foundation_NSString")]
        #[deprecated = "Please see CLCircularRegion"]
        #[cfg(not(any(target_os = "tvos")))]
        #[method_id(@__retain_semantics Init initCircularRegionWithCenter:radius:identifier:)]
        pub unsafe fn initCircularRegionWithCenter_radius_identifier(
            this: Option<Allocated<Self>>,
            center: CLLocationCoordinate2D,
            radius: CLLocationDistance,
            identifier: &NSString,
        ) -> Id<Self>;
    }
);
