//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AuthenticationServices::*;
use crate::Foundation::*;

ns_enum!(
    #[underlying(NSInteger)]
    /**
      @enum ASCredentialServiceIdentifierType
    @abstract The type of value represented by the service identifier.
    @constant ASCredentialServiceIdentifierTypeDomain The service identifier represents a domain name that conforms to RFC 1035.
    @constant ASCredentialServiceIdentifierTypeURL The service identifier represents a URL that conforms to RFC 1738.
    */
    pub enum ASCredentialServiceIdentifierType {
        ASCredentialServiceIdentifierTypeDomain = 0,
        ASCredentialServiceIdentifierTypeURL = 1,
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AuthenticationServices_ASCredentialServiceIdentifier")]
    pub struct ASCredentialServiceIdentifier;

    #[cfg(feature = "AuthenticationServices_ASCredentialServiceIdentifier")]
    unsafe impl ClassType for ASCredentialServiceIdentifier {
        type Super = NSObject;
    }
);

#[cfg(feature = "AuthenticationServices_ASCredentialServiceIdentifier")]
unsafe impl NSCoding for ASCredentialServiceIdentifier {}

#[cfg(feature = "AuthenticationServices_ASCredentialServiceIdentifier")]
unsafe impl NSObjectProtocol for ASCredentialServiceIdentifier {}

#[cfg(feature = "AuthenticationServices_ASCredentialServiceIdentifier")]
unsafe impl NSSecureCoding for ASCredentialServiceIdentifier {}

extern_methods!(
    #[cfg(feature = "AuthenticationServices_ASCredentialServiceIdentifier")]
    unsafe impl ASCredentialServiceIdentifier {
        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Init initWithIdentifier:type:)]
        pub unsafe fn initWithIdentifier_type(
            this: Option<Allocated<Self>>,
            identifier: &NSString,
            r#type: ASCredentialServiceIdentifierType,
        ) -> Id<Self>;

        #[cfg(feature = "Foundation_NSString")]
        /**
          @abstract Get the identifier.
        @result The service identifier.
        */
        #[method_id(@__retain_semantics Other identifier)]
        pub unsafe fn identifier(&self) -> Id<NSString>;

        /**
          @abstract Get the service identifier type.
        @result The service identifier type.
        */
        #[method(type)]
        pub unsafe fn r#type(&self) -> ASCredentialServiceIdentifierType;
    }
);
