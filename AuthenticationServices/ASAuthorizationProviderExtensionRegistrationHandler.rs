//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AuthenticationServices::*;
use crate::Foundation::*;

#[cfg(not(any(target_os = "ios", target_os = "tvos", target_os = "watchos")))]
ns_enum!(
    #[underlying(NSInteger)]
    pub enum ASAuthorizationProviderExtensionAuthenticationMethod {
        #[cfg(not(any(target_os = "ios", target_os = "tvos", target_os = "watchos")))]
        ASAuthorizationProviderExtensionAuthenticationMethodPassword = 1,
        #[cfg(not(any(target_os = "ios", target_os = "tvos", target_os = "watchos")))]
        ASAuthorizationProviderExtensionAuthenticationMethodUserSecureEnclaveKey = 2,
    }
);

ns_options!(
    #[underlying(NSUInteger)]
    pub enum ASAuthorizationProviderExtensionRequestOptions {
        ASAuthorizationProviderExtensionRequestOptionsNone = 0,
        ASAuthorizationProviderExtensionRequestOptionsUserInteractionEnabled = 1 << 0,
        ASAuthorizationProviderExtensionRequestOptionsRegistrationRepair = 1 << 1,
    }
);

#[cfg(not(any(target_os = "ios", target_os = "tvos", target_os = "watchos")))]
ns_enum!(
    #[underlying(NSInteger)]
    pub enum ASAuthorizationProviderExtensionRegistrationResult {
        #[cfg(not(any(target_os = "ios", target_os = "tvos", target_os = "watchos")))]
        ASAuthorizationProviderExtensionRegistrationResultSuccess = 0,
        #[cfg(not(any(target_os = "ios", target_os = "tvos", target_os = "watchos")))]
        ASAuthorizationProviderExtensionRegistrationResultFailed = 1,
        #[cfg(not(any(target_os = "ios", target_os = "tvos", target_os = "watchos")))]
        ASAuthorizationProviderExtensionRegistrationResultUserInterfaceRequired = 2,
        #[cfg(not(any(target_os = "ios", target_os = "tvos", target_os = "watchos")))]
        ASAuthorizationProviderExtensionRegistrationResultFailedNoRetry = 3,
    }
);

extern_protocol!(
    #[cfg(not(any(target_os = "ios", target_os = "tvos", target_os = "watchos")))]
    pub unsafe trait ASAuthorizationProviderExtensionRegistrationHandler:
        NSObjectProtocol
    {
        #[cfg(feature = "AuthenticationServices_ASAuthorizationProviderExtensionLoginManager")]
        #[method(beginDeviceRegistrationUsingLoginManager:options:completion:)]
        unsafe fn beginDeviceRegistrationUsingLoginManager_options_completion(
            &self,
            login_manager: &ASAuthorizationProviderExtensionLoginManager,
            options: ASAuthorizationProviderExtensionRequestOptions,
            completion: &Block<(ASAuthorizationProviderExtensionRegistrationResult,), ()>,
        );

        #[cfg(all(
            feature = "AuthenticationServices_ASAuthorizationProviderExtensionLoginManager",
            feature = "Foundation_NSString"
        ))]
        #[method(beginUserRegistrationUsingLoginManager:userName:authenticationMethod:options:completion:)]
        unsafe fn beginUserRegistrationUsingLoginManager_userName_authenticationMethod_options_completion(
            &self,
            login_manager: &ASAuthorizationProviderExtensionLoginManager,
            user_name: Option<&NSString>,
            authentication_method: ASAuthorizationProviderExtensionAuthenticationMethod,
            options: ASAuthorizationProviderExtensionRequestOptions,
            completion: &Block<(ASAuthorizationProviderExtensionRegistrationResult,), ()>,
        );

        #[optional]
        #[method(registrationDidComplete)]
        unsafe fn registrationDidComplete(&self);
    }

    #[cfg(not(any(target_os = "ios", target_os = "tvos", target_os = "watchos")))]
    unsafe impl ProtocolType for dyn ASAuthorizationProviderExtensionRegistrationHandler {}
);
