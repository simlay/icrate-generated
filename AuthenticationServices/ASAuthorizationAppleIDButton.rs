//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AuthenticationServices::*;
use crate::Foundation::*;

#[cfg(not(any(target_os = "watchos")))]
ns_enum!(
    #[underlying(NSInteger)]
    pub enum ASAuthorizationAppleIDButtonType {
        #[cfg(not(any(target_os = "watchos")))]
        ASAuthorizationAppleIDButtonTypeSignIn = 0,
        #[cfg(not(any(target_os = "watchos")))]
        ASAuthorizationAppleIDButtonTypeContinue = 1,
        #[cfg(not(any(target_os = "watchos")))]
        ASAuthorizationAppleIDButtonTypeSignUp = 2,
        #[cfg(not(any(target_os = "watchos")))]
        ASAuthorizationAppleIDButtonTypeDefault = ASAuthorizationAppleIDButtonTypeSignIn,
    }
);

#[cfg(not(any(target_os = "watchos")))]
ns_enum!(
    #[underlying(NSInteger)]
    pub enum ASAuthorizationAppleIDButtonStyle {
        #[cfg(not(any(target_os = "watchos")))]
        ASAuthorizationAppleIDButtonStyleWhite = 0,
        #[cfg(not(any(target_os = "watchos")))]
        ASAuthorizationAppleIDButtonStyleWhiteOutline = 1,
        #[cfg(not(any(target_os = "watchos")))]
        ASAuthorizationAppleIDButtonStyleBlack = 2,
    }
);

#[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDButton")]
#[cfg(not(any(target_os = "watchos")))]
unsafe impl NSAccessibility for ASAuthorizationAppleIDButton {}

#[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDButton")]
#[cfg(not(any(target_os = "watchos")))]
unsafe impl NSAccessibilityButton for ASAuthorizationAppleIDButton {}

#[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDButton")]
#[cfg(not(any(target_os = "watchos")))]
unsafe impl NSAccessibilityElementProtocol for ASAuthorizationAppleIDButton {}

#[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDButton")]
#[cfg(not(any(target_os = "watchos")))]
unsafe impl NSAnimatablePropertyContainer for ASAuthorizationAppleIDButton {}

#[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDButton")]
#[cfg(not(any(target_os = "watchos")))]
unsafe impl NSAppearanceCustomization for ASAuthorizationAppleIDButton {}

#[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDButton")]
#[cfg(not(any(target_os = "watchos")))]
unsafe impl NSCoding for ASAuthorizationAppleIDButton {}

#[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDButton")]
#[cfg(not(any(target_os = "watchos")))]
unsafe impl NSDraggingDestination for ASAuthorizationAppleIDButton {}

#[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDButton")]
#[cfg(not(any(target_os = "watchos")))]
unsafe impl NSObjectProtocol for ASAuthorizationAppleIDButton {}

#[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDButton")]
#[cfg(not(any(target_os = "watchos")))]
unsafe impl NSUserInterfaceItemIdentification for ASAuthorizationAppleIDButton {}

#[cfg(not(any(target_os = "watchos")))]
extern_methods!(
    #[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDButton")]
    #[cfg(not(any(target_os = "watchos")))]
    unsafe impl ASAuthorizationAppleIDButton {
        #[method_id(@__retain_semantics Other buttonWithType:style:)]
        pub unsafe fn buttonWithType_style(
            r#type: ASAuthorizationAppleIDButtonType,
            style: ASAuthorizationAppleIDButtonStyle,
        ) -> Id<Self>;

        #[method_id(@__retain_semantics Init initWithAuthorizationButtonType:authorizationButtonStyle:)]
        pub unsafe fn initWithAuthorizationButtonType_authorizationButtonStyle(
            this: Option<Allocated<Self>>,
            r#type: ASAuthorizationAppleIDButtonType,
            style: ASAuthorizationAppleIDButtonStyle,
        ) -> Id<Self>;

        #[cfg(not(any(target_os = "tvos")))]
        #[method(cornerRadius)]
        pub unsafe fn cornerRadius(&self) -> CGFloat;

        #[cfg(not(any(target_os = "tvos")))]
        #[method(setCornerRadius:)]
        pub unsafe fn setCornerRadius(&self, corner_radius: CGFloat);
    }
);

#[cfg(not(any(target_os = "watchos")))]
extern_methods!(
    /// Methods declared on superclass `NSControl`
    #[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDButton")]
    #[cfg(not(any(target_os = "watchos")))]
    unsafe impl ASAuthorizationAppleIDButton {
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init initWithFrame:)]
        pub unsafe fn initWithFrame(this: Option<Allocated<Self>>, frame_rect: NSRect) -> Id<Self>;

        #[cfg(feature = "Foundation_NSCoder")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Option<Allocated<Self>>,
            coder: &NSCoder,
        ) -> Option<Id<Self>>;
    }
);

#[cfg(not(any(target_os = "watchos")))]
extern_methods!(
    /// Methods declared on superclass `NSResponder`
    #[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDButton")]
    #[cfg(not(any(target_os = "watchos")))]
    unsafe impl ASAuthorizationAppleIDButton {
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
    }
);

#[cfg(not(any(target_os = "watchos")))]
extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDButton")]
    #[cfg(not(any(target_os = "watchos")))]
    unsafe impl ASAuthorizationAppleIDButton {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
