//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AuthenticationServices::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AuthenticationServices_ASCredentialIdentityStoreState")]
    pub struct ASCredentialIdentityStoreState;

    #[cfg(feature = "AuthenticationServices_ASCredentialIdentityStoreState")]
    unsafe impl ClassType for ASCredentialIdentityStoreState {
        type Super = NSObject;
    }
);

#[cfg(feature = "AuthenticationServices_ASCredentialIdentityStoreState")]
unsafe impl NSObjectProtocol for ASCredentialIdentityStoreState {}

extern_methods!(
    #[cfg(feature = "AuthenticationServices_ASCredentialIdentityStoreState")]
    unsafe impl ASCredentialIdentityStoreState {
        /**
          @abstract Get the enabled state of the credential identity store.
        @result YES if the credential identity store is enabled.
        @dicussion You can only modify the credential identity store when it is enabled.
        */
        #[method(isEnabled)]
        pub unsafe fn isEnabled(&self) -> bool;

        /**
          @abstract Get whether the credential identity store supports incremental updates.
        @result YES if the credential identity store supports incremental updates.
        @discussion You should examine the value returned by this property to find out if
        the credential identity store can accept incremental updates. If incremental updates
        are supported, you can update the credential identity store with only the new changes
        since the last time it was updated. Otherwise, you should update the credential identity
        store by adding all credential identities.
        */
        #[method(supportsIncrementalUpdates)]
        pub unsafe fn supportsIncrementalUpdates(&self) -> bool;
    }
);
