//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::MapKit::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MapKit_MKMultiPoint")]
    #[cfg(not(any(target_os = "watchos")))]
    pub struct MKMultiPoint;

    #[cfg(not(any(target_os = "watchos")))]
    #[cfg(feature = "MapKit_MKMultiPoint")]
    unsafe impl ClassType for MKMultiPoint {
        #[inherits(NSObject)]
        type Super = MKShape;
    }
);

#[cfg(feature = "MapKit_MKMultiPoint")]
#[cfg(not(any(target_os = "watchos")))]
unsafe impl MKAnnotation for MKMultiPoint {}

#[cfg(feature = "MapKit_MKMultiPoint")]
#[cfg(not(any(target_os = "watchos")))]
unsafe impl NSObjectProtocol for MKMultiPoint {}

extern_methods!(
    #[cfg(feature = "MapKit_MKMultiPoint")]
    #[cfg(not(any(target_os = "watchos")))]
    unsafe impl MKMultiPoint {
        #[cfg(not(any(target_os = "watchos")))]
        #[method(points)]
        pub unsafe fn points(&self) -> NonNull<MKMapPoint>;

        #[cfg(not(any(target_os = "watchos")))]
        #[method(pointCount)]
        pub unsafe fn pointCount(&self) -> NSUInteger;

        #[cfg(not(any(target_os = "watchos")))]
        #[method(getCoordinates:range:)]
        pub unsafe fn getCoordinates_range(
            &self,
            coords: NonNull<CLLocationCoordinate2D>,
            range: NSRange,
        );

        #[cfg(not(any(target_os = "watchos")))]
        #[cfg(not(any(target_os = "watchos")))]
        #[method(locationAtPointIndex:)]
        pub unsafe fn locationAtPointIndex(&self, index: NSUInteger) -> CGFloat;

        #[cfg(not(any(target_os = "watchos")))]
        #[cfg(all(
            feature = "Foundation_NSArray",
            feature = "Foundation_NSIndexSet",
            feature = "Foundation_NSNumber"
        ))]
        #[cfg(not(any(target_os = "watchos")))]
        #[method_id(@__retain_semantics Other locationsAtPointIndexes:)]
        pub unsafe fn locationsAtPointIndexes(&self, indexes: &NSIndexSet)
            -> Id<NSArray<NSNumber>>;
    }
);
