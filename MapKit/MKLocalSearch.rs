//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::MapKit::*;

pub type MKLocalSearchCompletionHandler =
    *mut Block<(*mut MKLocalSearchResponse, *mut NSError), ()>;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MapKit_MKLocalSearch")]
    #[cfg(not(any(target_os = "watchos")))]
    pub struct MKLocalSearch;

    #[cfg(feature = "MapKit_MKLocalSearch")]
    unsafe impl ClassType for MKLocalSearch {
        type Super = NSObject;
    }
);

#[cfg(feature = "MapKit_MKLocalSearch")]
unsafe impl NSObjectProtocol for MKLocalSearch {}

extern_methods!(
    #[cfg(feature = "MapKit_MKLocalSearch")]
    unsafe impl MKLocalSearch {
        #[cfg(feature = "MapKit_MKLocalSearchRequest")]
        #[method_id(@__retain_semantics Init initWithRequest:)]
        pub unsafe fn initWithRequest(
            this: Option<Allocated<Self>>,
            request: &MKLocalSearchRequest,
        ) -> Id<Self>;

        #[cfg(feature = "MapKit_MKLocalPointsOfInterestRequest")]
        #[cfg(not(any(target_os = "watchos")))]
        #[method_id(@__retain_semantics Init initWithPointsOfInterestRequest:)]
        pub unsafe fn initWithPointsOfInterestRequest(
            this: Option<Allocated<Self>>,
            request: &MKLocalPointsOfInterestRequest,
        ) -> Id<Self>;

        #[method(startWithCompletionHandler:)]
        pub unsafe fn startWithCompletionHandler(
            &self,
            completion_handler: MKLocalSearchCompletionHandler,
        );

        #[method(cancel)]
        pub unsafe fn cancel(&self);

        #[method(isSearching)]
        pub unsafe fn isSearching(&self) -> bool;
    }
);
