//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::PhotoKit::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "PhotoKit_PHProjectChangeRequest")]
    /**
      PHProjectChangeRequest can only be created or used within a -[PHPhotoLibrary performChanges:] or -[PHPhotoLibrary performChangesAndWait:] block.
    */
    pub struct PHProjectChangeRequest;

    #[cfg(feature = "PhotoKit_PHProjectChangeRequest")]
    unsafe impl ClassType for PHProjectChangeRequest {
        #[inherits(NSObject)]
        type Super = PHChangeRequest;
    }
);

#[cfg(feature = "PhotoKit_PHProjectChangeRequest")]
/**
  PHProjectChangeRequest can only be created or used within a -[PHPhotoLibrary performChanges:] or -[PHPhotoLibrary performChangesAndWait:] block.
*/
unsafe impl NSObjectProtocol for PHProjectChangeRequest {}

extern_methods!(
    /**
      PHProjectChangeRequest can only be created or used within a -[PHPhotoLibrary performChanges:] or -[PHPhotoLibrary performChangesAndWait:] block.
    */
    #[cfg(feature = "PhotoKit_PHProjectChangeRequest")]
    unsafe impl PHProjectChangeRequest {
        #[cfg(feature = "PhotoKit_PHProject")]
        #[method_id(@__retain_semantics Init initWithProject:)]
        pub unsafe fn initWithProject(
            this: Option<Allocated<Self>>,
            project: &PHProject,
        ) -> Id<Self>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other title)]
        pub unsafe fn title(&self) -> Id<NSString>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setTitle:)]
        pub unsafe fn setTitle(&self, title: &NSString);

        #[cfg(feature = "Foundation_NSData")]
        /**
         The projectExtensionData property is intended for storage of compressed, project specific data
        only. Do not include things like rasterized images that can be locally cached in this data. The
        total size of stored data is limited to 1 MB. Attempting to store more data than allowed will result
        in an error.
        */
        #[method_id(@__retain_semantics Other projectExtensionData)]
        pub unsafe fn projectExtensionData(&self) -> Id<NSData>;

        #[cfg(feature = "Foundation_NSData")]
        /**
         The projectExtensionData property is intended for storage of compressed, project specific data
        only. Do not include things like rasterized images that can be locally cached in this data. The
        total size of stored data is limited to 1 MB. Attempting to store more data than allowed will result
        in an error.
        */
        #[method(setProjectExtensionData:)]
        pub unsafe fn setProjectExtensionData(&self, project_extension_data: &NSData);

        #[cfg(feature = "PhotoKit_PHAsset")]
        #[deprecated]
        #[method(setKeyAsset:)]
        pub unsafe fn setKeyAsset(&self, key_asset: Option<&PHAsset>);

        #[cfg(feature = "AppKit_NSImage")]
        #[method(setProjectPreviewImage:)]
        pub unsafe fn setProjectPreviewImage(&self, preview_image: &NSImage);

        #[method(removeAssets:)]
        pub unsafe fn removeAssets(&self, assets: &ProtocolObject<dyn NSFastEnumeration>);
    }
);
