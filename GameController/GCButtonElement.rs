//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::GameController::*;

extern_protocol!(
    /**
     An object conforming to \c GCButtonElement represents a momentary switch,
    such as a push button.  A button's input only asserts while the user is
    interacting with it, and then returns to a preferred state (not pressed, not
    touched).
    */
    pub unsafe trait GCButtonElement: GCPhysicalInputElement {
        /**
         Get the input containing the pressed state of the button.
        */
        #[method_id(@__retain_semantics Other pressedInput)]
        unsafe fn pressedInput(&self) -> Id<TodoProtocols>;

        /**
         Get the input containing the touched state of the button.

        Some buttons feature capacitive touch capabilities where the user can touch the
        button without pressing it.
        */
        #[method_id(@__retain_semantics Other touchedInput)]
        unsafe fn touchedInput(&self) -> Option<Id<ProtocolObject<dyn GCTouchedStateInput>>>;
    }

    unsafe impl ProtocolType for dyn GCButtonElement {}
);
