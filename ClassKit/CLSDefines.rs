//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::ClassKit::*;
use crate::Foundation::*;

extern_static!(CLSErrorCodeDomain: Option<&'static NSString>);

ns_error_enum!(
    #[underlying(NSInteger)]
    /**
     @enum      CLSErrorCode

    @constant  CLSErrorCodeNone                         No error.
    @constant  CLSErrorCodeClassKitUnavailable       	 ClassKit is not available on this device.
    @constant  CLSErrorCodeInvalidArgument              An invalid argument was provided to the API.
    @constant  CLSErrorCodeInvalidModification          Attempted to modify a readonly object.
    @constant  CLSErrorCodeAuthorizationDenied          The application is not authorized to perform the requested operation.
    @constant  CLSErrorCodeDatabaseInaccessible         Protected ClassKit is inaccessible because the device is locked.
    @constant  CLSErrorCodeLimits                       Limits exceeded.
    @constant  CLSErrorCodeInvalidCreate                Attempted to save new object that already exists in the data store.
    @constant  CLSErrorCodeInvalidUpdate                Failed to save updated object in the data store.
    @constant  CLSErrorCodePartialFailure               Returned if an operation resulted in a mix of successes and failures.
    @constant  CLSErrorCodeInvalidAccountCredentials    Returned if an operation failed because the user MAID account credentials are invalid.
    */
    pub enum CLSErrorCode {
        CLSErrorCodeNone = 0,
        CLSErrorCodeClassKitUnavailable = 1,
        CLSErrorCodeInvalidArgument = 2,
        CLSErrorCodeInvalidModification = 3,
        CLSErrorCodeAuthorizationDenied = 4,
        CLSErrorCodeDatabaseInaccessible = 5,
        CLSErrorCodeLimits = 6,
        CLSErrorCodeInvalidCreate = 7,
        CLSErrorCodeInvalidUpdate = 8,
        CLSErrorCodePartialFailure = 9,
        CLSErrorCodeInvalidAccountCredentials = 10,
    }
);

typed_extensible_enum!(
    pub type CLSErrorUserInfoKey = NSString;
);

extern_static!(CLSErrorObjectKey: Option<&'static CLSErrorUserInfoKey>);

extern_static!(CLSErrorUnderlyingErrorsKey: Option<&'static CLSErrorUserInfoKey>);

extern_static!(CLSErrorSuccessfulObjectsKey: Option<&'static CLSErrorUserInfoKey>);

typed_extensible_enum!(
    pub type CLSPredicateKeyPath = NSString;
);

extern_static!(CLSPredicateKeyPathDateCreated: Option<&'static CLSPredicateKeyPath>);

extern_static!(CLSPredicateKeyPathIdentifier: Option<&'static CLSPredicateKeyPath>);

extern_static!(CLSPredicateKeyPathTitle: Option<&'static CLSPredicateKeyPath>);

extern_static!(CLSPredicateKeyPathUniversalLinkURL: Option<&'static CLSPredicateKeyPath>);

extern_static!(CLSPredicateKeyPathTopic: Option<&'static CLSPredicateKeyPath>);

extern_static!(CLSPredicateKeyPathParent: Option<&'static CLSPredicateKeyPath>);
