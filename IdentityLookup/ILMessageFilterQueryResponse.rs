//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::IdentityLookup::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "IdentityLookup_ILMessageFilterQueryResponse")]
    #[cfg(not(any(target_os = "macos")))]
    pub struct ILMessageFilterQueryResponse;

    #[cfg(feature = "IdentityLookup_ILMessageFilterQueryResponse")]
    unsafe impl ClassType for ILMessageFilterQueryResponse {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "IdentityLookup_ILMessageFilterQueryResponse")]
#[cfg(not(any(target_os = "macos")))]
unsafe impl NSCoding for ILMessageFilterQueryResponse {}

#[cfg(feature = "IdentityLookup_ILMessageFilterQueryResponse")]
#[cfg(not(any(target_os = "macos")))]
unsafe impl NSObjectProtocol for ILMessageFilterQueryResponse {}

#[cfg(feature = "IdentityLookup_ILMessageFilterQueryResponse")]
#[cfg(not(any(target_os = "macos")))]
unsafe impl NSSecureCoding for ILMessageFilterQueryResponse {}

#[cfg(not(any(target_os = "macos")))]
extern_methods!(
    #[cfg(feature = "IdentityLookup_ILMessageFilterQueryResponse")]
    unsafe impl ILMessageFilterQueryResponse {
        #[method(action)]
        pub unsafe fn action(&self) -> ILMessageFilterAction;

        #[method(setAction:)]
        pub unsafe fn setAction(&self, action: ILMessageFilterAction);

        #[cfg(not(any(target_os = "macos")))]
        #[method(subAction)]
        pub unsafe fn subAction(&self) -> ILMessageFilterSubAction;

        #[cfg(not(any(target_os = "macos")))]
        #[method(setSubAction:)]
        pub unsafe fn setSubAction(&self, sub_action: ILMessageFilterSubAction);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "IdentityLookup_ILMessageFilterQueryResponse")]
    unsafe impl ILMessageFilterQueryResponse {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
