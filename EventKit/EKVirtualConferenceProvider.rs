//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreLocation::*;
use crate::EventKit::*;
use crate::Foundation::*;
use crate::MapKit::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "EventKit_EKVirtualConferenceProvider")]
    /**
     @class      EKVirtualConferenceProvider
    @abstract   Provides virtual conferences to Calendar.
    @discussion Subclass this class in your extension and override the below two methods.
    */
    pub struct EKVirtualConferenceProvider;

    #[cfg(feature = "EventKit_EKVirtualConferenceProvider")]
    unsafe impl ClassType for EKVirtualConferenceProvider {
        type Super = NSObject;
    }
);

#[cfg(feature = "EventKit_EKVirtualConferenceProvider")]
/**
 @class      EKVirtualConferenceProvider
@abstract   Provides virtual conferences to Calendar.
@discussion Subclass this class in your extension and override the below two methods.
*/
unsafe impl NSExtensionRequestHandling for EKVirtualConferenceProvider {}

#[cfg(feature = "EventKit_EKVirtualConferenceProvider")]
/**
 @class      EKVirtualConferenceProvider
@abstract   Provides virtual conferences to Calendar.
@discussion Subclass this class in your extension and override the below two methods.
*/
unsafe impl NSObjectProtocol for EKVirtualConferenceProvider {}

extern_methods!(
    /**
     @class      EKVirtualConferenceProvider
    @abstract   Provides virtual conferences to Calendar.
    @discussion Subclass this class in your extension and override the below two methods.
    */
    #[cfg(feature = "EventKit_EKVirtualConferenceProvider")]
    unsafe impl EKVirtualConferenceProvider {
        #[cfg(all(
            feature = "EventKit_EKVirtualConferenceRoomTypeDescriptor",
            feature = "Foundation_NSArray",
            feature = "Foundation_NSError"
        ))]
        #[method(fetchAvailableRoomTypesWithCompletionHandler:)]
        pub unsafe fn fetchAvailableRoomTypesWithCompletionHandler(
            &self,
            completion_handler: &Block<
                (
                    *mut NSArray<EKVirtualConferenceRoomTypeDescriptor>,
                    *mut NSError,
                ),
                (),
            >,
        );

        #[cfg(all(
            feature = "EventKit_EKVirtualConferenceDescriptor",
            feature = "Foundation_NSError"
        ))]
        #[method(fetchVirtualConferenceForIdentifier:completionHandler:)]
        pub unsafe fn fetchVirtualConferenceForIdentifier_completionHandler(
            &self,
            identifier: &EKVirtualConferenceRoomTypeIdentifier,
            completion_handler: &Block<(*mut EKVirtualConferenceDescriptor, *mut NSError), ()>,
        );
    }
);
