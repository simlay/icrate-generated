//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#![allow(unused_imports)]
#![allow(deprecated)]
#[path = "EKAlarm.rs"]
mod __EKAlarm;
#[path = "EKCalendar.rs"]
mod __EKCalendar;
#[path = "EKCalendarItem.rs"]
mod __EKCalendarItem;
#[path = "EKError.rs"]
mod __EKError;
#[path = "EKEvent.rs"]
mod __EKEvent;
#[path = "EKEventStore.rs"]
mod __EKEventStore;
#[path = "EKObject.rs"]
mod __EKObject;
#[path = "EKParticipant.rs"]
mod __EKParticipant;
#[path = "EKRecurrenceDayOfWeek.rs"]
mod __EKRecurrenceDayOfWeek;
#[path = "EKRecurrenceEnd.rs"]
mod __EKRecurrenceEnd;
#[path = "EKRecurrenceRule.rs"]
mod __EKRecurrenceRule;
#[path = "EKReminder.rs"]
mod __EKReminder;
#[path = "EKSource.rs"]
mod __EKSource;
#[path = "EKStructuredLocation.rs"]
mod __EKStructuredLocation;
#[path = "EKTypes.rs"]
mod __EKTypes;
#[path = "EKVirtualConferenceDescriptor.rs"]
mod __EKVirtualConferenceDescriptor;
#[path = "EKVirtualConferenceProvider.rs"]
mod __EKVirtualConferenceProvider;
#[path = "EventKitDefines.rs"]
mod __EventKitDefines;

#[cfg(feature = "EventKit_EKAlarm")]
pub use self::__EKAlarm::EKAlarm;
#[cfg(feature = "EventKit_EKCalendar")]
pub use self::__EKCalendar::EKCalendar;
#[cfg(feature = "EventKit_EKCalendarItem")]
pub use self::__EKCalendarItem::EKCalendarItem;
pub use self::__EKError::EKErrorAlarmGreaterThanRecurrence;
pub use self::__EKError::EKErrorAlarmProximityNotSupported;
pub use self::__EKError::EKErrorCalendarDoesNotAllowEvents;
pub use self::__EKError::EKErrorCalendarDoesNotAllowReminders;
pub use self::__EKError::EKErrorCalendarHasNoSource;
pub use self::__EKError::EKErrorCalendarIsImmutable;
pub use self::__EKError::EKErrorCalendarReadOnly;
pub use self::__EKError::EKErrorCalendarSourceCannotBeModified;
pub use self::__EKError::EKErrorCode;
pub use self::__EKError::EKErrorDatesInverted;
pub use self::__EKError::EKErrorDomain;
pub use self::__EKError::EKErrorDurationGreaterThanRecurrence;
pub use self::__EKError::EKErrorEventNotMutable;
pub use self::__EKError::EKErrorEventStoreNotAuthorized;
pub use self::__EKError::EKErrorInternalFailure;
pub use self::__EKError::EKErrorInvalidEntityType;
pub use self::__EKError::EKErrorInvalidInviteReplyCalendar;
pub use self::__EKError::EKErrorInvalidSpan;
pub use self::__EKError::EKErrorInvitesCannotBeMoved;
pub use self::__EKError::EKErrorLast;
pub use self::__EKError::EKErrorNoCalendar;
pub use self::__EKError::EKErrorNoEndDate;
pub use self::__EKError::EKErrorNoStartDate;
pub use self::__EKError::EKErrorNotificationCollectionMismatch;
pub use self::__EKError::EKErrorNotificationSavedWithoutCollection;
pub use self::__EKError::EKErrorNotificationsCollectionFlagNotSet;
pub use self::__EKError::EKErrorOSNotSupported;
pub use self::__EKError::EKErrorObjectBelongsToDifferentStore;
pub use self::__EKError::EKErrorPriorityIsInvalid;
pub use self::__EKError::EKErrorProcedureAlarmsNotMutable;
pub use self::__EKError::EKErrorRecurringReminderRequiresDueDate;
pub use self::__EKError::EKErrorReminderAlarmContainsEmailOrUrl;
pub use self::__EKError::EKErrorReminderLocationsNotSupported;
pub use self::__EKError::EKErrorSourceDoesNotAllowCalendarAddDelete;
pub use self::__EKError::EKErrorSourceDoesNotAllowEvents;
pub use self::__EKError::EKErrorSourceDoesNotAllowReminders;
pub use self::__EKError::EKErrorSourceMismatch;
pub use self::__EKError::EKErrorStartDateCollidesWithOtherOccurrence;
pub use self::__EKError::EKErrorStartDateTooFarInFuture;
pub use self::__EKError::EKErrorStructuredLocationsNotSupported;
#[cfg(feature = "EventKit_EKEvent")]
pub use self::__EKEvent::EKEvent;
pub use self::__EKEvent::EKEventAvailability;
pub use self::__EKEvent::EKEventAvailabilityBusy;
pub use self::__EKEvent::EKEventAvailabilityFree;
pub use self::__EKEvent::EKEventAvailabilityNotSupported;
pub use self::__EKEvent::EKEventAvailabilityTentative;
pub use self::__EKEvent::EKEventAvailabilityUnavailable;
pub use self::__EKEvent::EKEventStatus;
pub use self::__EKEvent::EKEventStatusCanceled;
pub use self::__EKEvent::EKEventStatusConfirmed;
pub use self::__EKEvent::EKEventStatusNone;
pub use self::__EKEvent::EKEventStatusTentative;
pub use self::__EKEventStore::EKEventSearchCallback;
#[cfg(feature = "EventKit_EKEventStore")]
pub use self::__EKEventStore::EKEventStore;
pub use self::__EKEventStore::EKEventStoreChangedNotification;
pub use self::__EKEventStore::EKEventStoreRequestAccessCompletionHandler;
pub use self::__EKEventStore::EKSpan;
pub use self::__EKEventStore::EKSpanFutureEvents;
pub use self::__EKEventStore::EKSpanThisEvent;
#[cfg(feature = "EventKit_EKObject")]
pub use self::__EKObject::EKObject;
#[cfg(feature = "EventKit_EKParticipant")]
pub use self::__EKParticipant::EKParticipant;
#[cfg(feature = "EventKit_EKRecurrenceDayOfWeek")]
pub use self::__EKRecurrenceDayOfWeek::EKRecurrenceDayOfWeek;
#[cfg(feature = "EventKit_EKRecurrenceEnd")]
pub use self::__EKRecurrenceEnd::EKRecurrenceEnd;
#[cfg(feature = "EventKit_EKRecurrenceRule")]
pub use self::__EKRecurrenceRule::EKRecurrenceRule;
#[cfg(feature = "EventKit_EKReminder")]
pub use self::__EKReminder::EKReminder;
#[cfg(feature = "EventKit_EKSource")]
pub use self::__EKSource::EKSource;
#[cfg(feature = "EventKit_EKStructuredLocation")]
pub use self::__EKStructuredLocation::EKStructuredLocation;
pub use self::__EKTypes::EKAlarmProximity;
pub use self::__EKTypes::EKAlarmProximityEnter;
pub use self::__EKTypes::EKAlarmProximityLeave;
pub use self::__EKTypes::EKAlarmProximityNone;
pub use self::__EKTypes::EKAlarmType;
pub use self::__EKTypes::EKAlarmTypeAudio;
pub use self::__EKTypes::EKAlarmTypeDisplay;
pub use self::__EKTypes::EKAlarmTypeEmail;
pub use self::__EKTypes::EKAlarmTypeProcedure;
pub use self::__EKTypes::EKAuthorizationStatus;
pub use self::__EKTypes::EKAuthorizationStatusAuthorized;
pub use self::__EKTypes::EKAuthorizationStatusDenied;
pub use self::__EKTypes::EKAuthorizationStatusNotDetermined;
pub use self::__EKTypes::EKAuthorizationStatusRestricted;
pub use self::__EKTypes::EKCalendarEventAvailabilityBusy;
pub use self::__EKTypes::EKCalendarEventAvailabilityFree;
pub use self::__EKTypes::EKCalendarEventAvailabilityMask;
pub use self::__EKTypes::EKCalendarEventAvailabilityNone;
pub use self::__EKTypes::EKCalendarEventAvailabilityTentative;
pub use self::__EKTypes::EKCalendarEventAvailabilityUnavailable;
pub use self::__EKTypes::EKCalendarType;
pub use self::__EKTypes::EKCalendarTypeBirthday;
pub use self::__EKTypes::EKCalendarTypeCalDAV;
pub use self::__EKTypes::EKCalendarTypeExchange;
pub use self::__EKTypes::EKCalendarTypeLocal;
pub use self::__EKTypes::EKCalendarTypeSubscription;
pub use self::__EKTypes::EKEntityMask;
pub use self::__EKTypes::EKEntityMaskEvent;
pub use self::__EKTypes::EKEntityMaskReminder;
pub use self::__EKTypes::EKEntityType;
pub use self::__EKTypes::EKEntityTypeEvent;
pub use self::__EKTypes::EKEntityTypeReminder;
pub use self::__EKTypes::EKFriday;
pub use self::__EKTypes::EKMonday;
pub use self::__EKTypes::EKParticipantRole;
pub use self::__EKTypes::EKParticipantRoleChair;
pub use self::__EKTypes::EKParticipantRoleNonParticipant;
pub use self::__EKTypes::EKParticipantRoleOptional;
pub use self::__EKTypes::EKParticipantRoleRequired;
pub use self::__EKTypes::EKParticipantRoleUnknown;
pub use self::__EKTypes::EKParticipantScheduleStatus;
pub use self::__EKTypes::EKParticipantScheduleStatusCannotDeliver;
pub use self::__EKTypes::EKParticipantScheduleStatusDelivered;
pub use self::__EKTypes::EKParticipantScheduleStatusDeliveryFailed;
pub use self::__EKTypes::EKParticipantScheduleStatusNoPrivileges;
pub use self::__EKTypes::EKParticipantScheduleStatusNone;
pub use self::__EKTypes::EKParticipantScheduleStatusPending;
pub use self::__EKTypes::EKParticipantScheduleStatusRecipientNotAllowed;
pub use self::__EKTypes::EKParticipantScheduleStatusRecipientNotRecognized;
pub use self::__EKTypes::EKParticipantScheduleStatusSent;
pub use self::__EKTypes::EKParticipantStatus;
pub use self::__EKTypes::EKParticipantStatusAccepted;
pub use self::__EKTypes::EKParticipantStatusCompleted;
pub use self::__EKTypes::EKParticipantStatusDeclined;
pub use self::__EKTypes::EKParticipantStatusDelegated;
pub use self::__EKTypes::EKParticipantStatusInProcess;
pub use self::__EKTypes::EKParticipantStatusPending;
pub use self::__EKTypes::EKParticipantStatusTentative;
pub use self::__EKTypes::EKParticipantStatusUnknown;
pub use self::__EKTypes::EKParticipantType;
pub use self::__EKTypes::EKParticipantTypeGroup;
pub use self::__EKTypes::EKParticipantTypePerson;
pub use self::__EKTypes::EKParticipantTypeResource;
pub use self::__EKTypes::EKParticipantTypeRoom;
pub use self::__EKTypes::EKParticipantTypeUnknown;
pub use self::__EKTypes::EKRecurrenceFrequency;
pub use self::__EKTypes::EKRecurrenceFrequencyDaily;
pub use self::__EKTypes::EKRecurrenceFrequencyMonthly;
pub use self::__EKTypes::EKRecurrenceFrequencyWeekly;
pub use self::__EKTypes::EKRecurrenceFrequencyYearly;
pub use self::__EKTypes::EKReminderPriority;
pub use self::__EKTypes::EKReminderPriorityHigh;
pub use self::__EKTypes::EKReminderPriorityLow;
pub use self::__EKTypes::EKReminderPriorityMedium;
pub use self::__EKTypes::EKReminderPriorityNone;
pub use self::__EKTypes::EKSaturday;
pub use self::__EKTypes::EKSourceType;
pub use self::__EKTypes::EKSourceTypeBirthdays;
pub use self::__EKTypes::EKSourceTypeCalDAV;
pub use self::__EKTypes::EKSourceTypeExchange;
pub use self::__EKTypes::EKSourceTypeLocal;
pub use self::__EKTypes::EKSourceTypeMobileMe;
pub use self::__EKTypes::EKSourceTypeSubscribed;
pub use self::__EKTypes::EKSunday;
pub use self::__EKTypes::EKThursday;
pub use self::__EKTypes::EKTuesday;
pub use self::__EKTypes::EKWednesday;
pub use self::__EKTypes::EKWeekday;
pub use self::__EKTypes::EKWeekdayFriday;
pub use self::__EKTypes::EKWeekdayMonday;
pub use self::__EKTypes::EKWeekdaySaturday;
pub use self::__EKTypes::EKWeekdaySunday;
pub use self::__EKTypes::EKWeekdayThursday;
pub use self::__EKTypes::EKWeekdayTuesday;
pub use self::__EKTypes::EKWeekdayWednesday;
#[cfg(feature = "EventKit_EKVirtualConferenceDescriptor")]
pub use self::__EKVirtualConferenceDescriptor::EKVirtualConferenceDescriptor;
#[cfg(feature = "EventKit_EKVirtualConferenceRoomTypeDescriptor")]
pub use self::__EKVirtualConferenceDescriptor::EKVirtualConferenceRoomTypeDescriptor;
pub use self::__EKVirtualConferenceDescriptor::EKVirtualConferenceRoomTypeIdentifier;
#[cfg(feature = "EventKit_EKVirtualConferenceURLDescriptor")]
pub use self::__EKVirtualConferenceDescriptor::EKVirtualConferenceURLDescriptor;
#[cfg(feature = "EventKit_EKVirtualConferenceProvider")]
pub use self::__EKVirtualConferenceProvider::EKVirtualConferenceProvider;
