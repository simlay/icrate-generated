//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

ns_enum!(
    #[underlying(NSInteger)]
    /**
      @enum WKUserScriptInjectionTime
    @abstract when a user script should be injected into a webpage.
    @constant WKUserScriptInjectionTimeAtDocumentStart    Inject the script after the document element has been created, but before any other content has been loaded.
    @constant WKUserScriptInjectionTimeAtDocumentEnd      Inject the script after the document has finished loading, but before any subresources may have finished loading.
    */
    pub enum WKUserScriptInjectionTime {
        WKUserScriptInjectionTimeAtDocumentStart = 0,
        WKUserScriptInjectionTimeAtDocumentEnd = 1,
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "WebKit_WKUserScript")]
    /**
      A @link WKUserScript @/link object represents a script that can be injected into webpages.
    */
    pub struct WKUserScript;

    #[cfg(feature = "WebKit_WKUserScript")]
    unsafe impl ClassType for WKUserScript {
        type Super = NSObject;
    }
);

#[cfg(feature = "WebKit_WKUserScript")]
/**
  A @link WKUserScript @/link object represents a script that can be injected into webpages.
*/
unsafe impl NSObjectProtocol for WKUserScript {}

extern_methods!(
    /**
      A @link WKUserScript @/link object represents a script that can be injected into webpages.
    */
    #[cfg(feature = "WebKit_WKUserScript")]
    unsafe impl WKUserScript {
        #[cfg(feature = "Foundation_NSString")]
        /**
          @abstract The script source code.
        */
        #[method_id(@__retain_semantics Other source)]
        pub unsafe fn source(&self) -> Id<NSString>;

        /**
          @abstract When the script should be injected.
        */
        #[method(injectionTime)]
        pub unsafe fn injectionTime(&self) -> WKUserScriptInjectionTime;

        /**
          @abstract Whether the script should be injected into all frames or just the main frame.
        */
        #[method(isForMainFrameOnly)]
        pub unsafe fn isForMainFrameOnly(&self) -> bool;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Init initWithSource:injectionTime:forMainFrameOnly:)]
        pub unsafe fn initWithSource_injectionTime_forMainFrameOnly(
            this: Option<Allocated<Self>>,
            source: &NSString,
            injection_time: WKUserScriptInjectionTime,
            for_main_frame_only: bool,
        ) -> Id<Self>;

        #[cfg(all(feature = "Foundation_NSString", feature = "WebKit_WKContentWorld"))]
        #[method_id(@__retain_semantics Init initWithSource:injectionTime:forMainFrameOnly:inContentWorld:)]
        pub unsafe fn initWithSource_injectionTime_forMainFrameOnly_inContentWorld(
            this: Option<Allocated<Self>>,
            source: &NSString,
            injection_time: WKUserScriptInjectionTime,
            for_main_frame_only: bool,
            content_world: &WKContentWorld,
        ) -> Id<Self>;
    }
);
